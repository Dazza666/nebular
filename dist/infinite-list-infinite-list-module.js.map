{"version":3,"sources":["./src/playground/with-layout/infinite-list/infinite-list-routing.module.ts","./src/playground/with-layout/infinite-list/news.service.ts","./src/playground/with-layout/infinite-list/infinite-news-list.component.ts","./src/playground/with-layout/infinite-list/infinite-list.module.ts","./src/playground/with-layout/infinite-list/infinite-list-showcase.component.ts","./src/playground/with-layout/infinite-list/infinite-list-placeholders.component.ts","./src/playground/with-layout/infinite-list/infinite-list-scroll-modes.component.ts","./src/playground/with-layout/infinite-list/components/news-post-placeholder.component.ts","./src/playground/with-layout/infinite-list/components/news-post.component.ts"],"names":[],"mappings":"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","file":"infinite-list-infinite-list-module.js","sourcesContent":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Route} from '@angular/router';\nimport { InfiniteListPlaceholdersComponent } from './infinite-list-placeholders.component';\nimport { InfiniteListScrollModesComponent } from './infinite-list-scroll-modes.component';\nimport { InfiniteListShowcaseComponent } from './infinite-list-showcase.component';\nimport { InfiniteNewsListComponent } from './infinite-news-list.component';\n\nconst routes: Route[] = [\n  {\n    path: 'infinite-list-placeholders.component',\n    component: InfiniteListPlaceholdersComponent,\n  },\n  {\n    path: 'infinite-list-scroll-modes.component',\n    component: InfiniteListScrollModesComponent,\n  },\n  {\n    path: 'infinite-list-showcase.component',\n    component: InfiniteListShowcaseComponent,\n  },\n  {\n    path: 'infinite-news-list.component',\n    component: InfiniteNewsListComponent,\n  },\n];\n\n@NgModule({\n  imports: [ RouterModule.forChild(routes) ],\n  exports: [ RouterModule ],\n})\nexport class InfiniteListRoutingModule {}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { delay, map } from 'rxjs/operators';\n\nconst TOTAL_PAGES = 7;\n\nexport class NewsPost {\n  title: string;\n  link: string;\n  creator: string;\n  text: string;\n}\n\n@Injectable()\nexport class NewsService {\n\n  constructor(private http: HttpClient) {}\n\n  load(page: number, pageSize: number): Observable<NewsPost[]> {\n    const startIndex = ((page - 1) % TOTAL_PAGES) * pageSize;\n\n    return this.http\n      .get<NewsPost[]>('assets/data/news.json')\n      .pipe(\n        map(news => news.splice(startIndex, pageSize)),\n        delay(1500),\n      );\n  }\n}\n","import { Component, ViewChildren, ElementRef, QueryList, OnInit, Inject, PLATFORM_ID, OnDestroy } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { take, filter, map } from 'rxjs/operators';\nimport { NbListItemComponent, NbLayoutScrollService, NB_WINDOW } from '@nebular/theme';\nimport { NewsService } from './news.service';\n\n@Component({\n  template: `\n    <nb-card>\n      <div [nbSpinner]=\"loadingPrevious\"></div>\n      <nb-list\n        nbInfiniteList\n        listenWindowScroll\n        [threshold]=\"500\"\n        (topThreshold)=\"loadPrevious()\"\n        (bottomThreshold)=\"loadNext()\"\n        nbListPageTracker\n        [pageSize]=\"pageSize\"\n        [startPage]=\"startPage\"\n        (pageChange)=\"updateUrl($event)\">\n        <nb-list-item *ngFor=\"let newsPost of news\">\n          <nb-news-post [post]=\"newsPost\"></nb-news-post>\n        </nb-list-item>\n        <nb-list-item *ngFor=\"let _ of placeholders\">\n          <nb-news-post-placeholder></nb-news-post-placeholder>\n        </nb-list-item>\n      </nb-list>\n    </nb-card>\n  `,\n  styleUrls: [ 'infinite-news-list.component.scss' ],\n  providers: [ NewsService ],\n})\nexport class InfiniteNewsListComponent implements OnInit, OnDestroy {\n\n  news = [];\n  placeholders = [];\n  pageSize = 10;\n  startPage: number;\n  pageToLoadNext: number;\n  loadingNext = false;\n  loadingPrevious = false;\n  initialScrollRestoration: ScrollRestoration;\n\n  @ViewChildren(NbListItemComponent, { read: ElementRef }) listItems: QueryList<ElementRef<Element>>;\n\n  constructor(\n    private newsService: NewsService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private scrollService: NbLayoutScrollService,\n    @Inject(PLATFORM_ID) private platformId,\n    @Inject(NB_WINDOW) private window,\n  ) {\n    if (isPlatformBrowser(this.platformId) && this.window.history.scrollRestoration) {\n      // Prevent browsers from scrolling down to last scroll position, when navigating back to this page.\n      // It doesn't make sense here, since list is dynamic and we handle last user position ourselves,\n      // by storing page number in URL. So for this component, we disable scroll restoration.\n      // Don't forget to re-enable it in 'OnDestroy', since this configuration preserved for the whole session\n      // and it will not be reset after page reload.\n      this.initialScrollRestoration = window.history.scrollRestoration;\n      history.scrollRestoration = 'manual';\n    }\n  }\n\n  ngOnInit() {\n    const { page } = this.route.snapshot.queryParams;\n    this.startPage = page ? Number.parseInt(page, 10) : 1;\n    this.pageToLoadNext = this.startPage;\n  }\n\n  ngOnDestroy() {\n    if (this.initialScrollRestoration) {\n      this.window.history.scrollRestoration = this.initialScrollRestoration;\n    }\n  }\n\n  updateUrl(page) {\n    this.router.navigate(['.'], {\n      queryParams: { page },\n      replaceUrl: true,\n      relativeTo: this.route,\n      queryParamsHandling: 'merge',\n    });\n  }\n\n  loadPrevious() {\n    if (this.loadingPrevious || this.startPage === 1) {\n      return;\n    }\n\n    this.loadingPrevious = true;\n    this.newsService.load(this.startPage - 1, this.pageSize)\n      .subscribe(news => {\n        this.news.unshift(...news);\n        this.loadingPrevious = false;\n        this.restoreScrollPosition();\n        this.startPage--;\n      });\n  }\n\n  loadNext() {\n    if (this.loadingNext) { return }\n\n    this.loadingNext = true;\n    this.placeholders = new Array(this.pageSize);\n    this.newsService.load(this.pageToLoadNext, this.pageSize)\n      .subscribe(news => {\n        this.placeholders = [];\n        this.news.push(...news);\n        this.loadingNext = false;\n        this.pageToLoadNext++;\n      });\n  }\n\n  private restoreScrollPosition() {\n    const previousFirstItem = this.listItems.length > 0 ? this.listItems.first.nativeElement : null;\n\n    this.listItems.changes\n      .pipe(\n        map(() => this.listItems.first.nativeElement),\n        filter(newFirstItem => newFirstItem !== previousFirstItem),\n        take(1),\n      )\n      .subscribe(() => {\n        let heightOfAddedItems = 0;\n        for (const { nativeElement } of this.listItems.toArray()) {\n          if (nativeElement === previousFirstItem) { break }\n          heightOfAddedItems += getElementHeight(this.window, nativeElement);\n        }\n        this.scrollService.scrollTo(null, heightOfAddedItems);\n      });\n  }\n}\n\nexport function getElementHeight(window, el) {\n  const style = window.getComputedStyle(el);\n  const marginTop = parseInt(style.getPropertyValue('margin-top'), 10);\n  const marginBottom = parseInt(style.getPropertyValue('margin-bottom'), 10);\n  return el.offsetHeight + marginTop + marginBottom;\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NbCardModule, NbListModule, NbSpinnerModule } from '@nebular/theme';\nimport { InfiniteListRoutingModule } from './infinite-list-routing.module';\nimport { InfiniteListPlaceholdersComponent } from './infinite-list-placeholders.component';\nimport { InfiniteListScrollModesComponent } from './infinite-list-scroll-modes.component';\nimport { InfiniteListShowcaseComponent } from './infinite-list-showcase.component';\nimport { InfiniteNewsListComponent } from './infinite-news-list.component';\nimport { NewsPostPlaceholderComponent } from './components/news-post-placeholder.component';\nimport { NewsPostComponent } from './components/news-post.component';\n\n@NgModule({\n  declarations: [\n    InfiniteListPlaceholdersComponent,\n    InfiniteListScrollModesComponent,\n    InfiniteListShowcaseComponent,\n    InfiniteNewsListComponent,\n    NewsPostPlaceholderComponent,\n    NewsPostComponent,\n  ],\n  imports: [\n    CommonModule,\n    NbListModule,\n    NbCardModule,\n    NbSpinnerModule,\n    InfiniteListRoutingModule,\n  ],\n})\nexport class InfiniteListModule {}\n","import { Component } from '@angular/core';\nimport { NewsService } from './news.service';\n\n@Component({\n  template: `\n    <nb-card>\n      <nb-list\n        nbInfiniteList\n        listenWindowScroll\n        [threshold]=\"500\"\n        (bottomThreshold)=\"loadNext()\">\n        <nb-list-item *ngFor=\"let newsPost of news\">\n          <nb-news-post [post]=\"newsPost\"></nb-news-post>\n        </nb-list-item>\n        <nb-list-item *ngFor=\"let _ of placeholders\">\n          <nb-news-post-placeholder></nb-news-post-placeholder>\n        </nb-list-item>\n      </nb-list>\n    </nb-card>\n  `,\n  styleUrls: [ 'infinite-news-list.component.scss' ],\n  providers: [ NewsService ],\n})\nexport class InfiniteListShowcaseComponent {\n\n  news = [];\n  placeholders = [];\n  pageSize = 10;\n  pageToLoadNext = 1;\n  loading = false;\n\n  constructor(private newsService: NewsService) {}\n\n  loadNext() {\n    if (this.loading) { return }\n\n    this.loading = true;\n    this.placeholders = new Array(this.pageSize);\n    this.newsService.load(this.pageToLoadNext, this.pageSize)\n      .subscribe(news => {\n        this.placeholders = [];\n        this.news.push(...news);\n        this.loading = false;\n        this.pageToLoadNext++;\n      });\n  }\n}\n","import { Component, ViewChildren, ElementRef, QueryList, OnInit, Inject, PLATFORM_ID, OnDestroy } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { concat } from 'rxjs';\nimport { take, toArray } from 'rxjs/operators';\nimport { NbListItemComponent, NbLayoutScrollService, NB_WINDOW, NbLayoutRulerService } from '@nebular/theme';\nimport { NewsService } from './news.service';\n\n@Component({\n  template: `\n    <nb-card>\n      <nb-list\n        nbInfiniteList\n        listenWindowScroll\n        [threshold]=\"500\"\n        (topThreshold)=\"loadPrevious()\"\n        (bottomThreshold)=\"loadNext()\"\n        nbListPageTracker\n        [pageSize]=\"pageSize\"\n        [startPage]=\"startPage\"\n        (pageChange)=\"updateUrl($event)\">\n        <nb-list-item *ngFor=\"let _ of topPlaceholders\">\n          <nb-news-post-placeholder></nb-news-post-placeholder>\n        </nb-list-item>\n        <nb-list-item *ngFor=\"let newsPost of news\">\n          <nb-news-post [post]=\"newsPost\"></nb-news-post>\n        </nb-list-item>\n        <nb-list-item *ngFor=\"let _ of bottomPlaceholders\">\n          <nb-news-post-placeholder></nb-news-post-placeholder>\n        </nb-list-item>\n      </nb-list>\n    </nb-card>\n  `,\n  styleUrls: [ 'infinite-news-list.component.scss' ],\n  providers: [ NewsService ],\n})\nexport class InfiniteListPlaceholdersComponent implements OnInit, OnDestroy {\n\n  news = [];\n  topPlaceholders = [];\n  bottomPlaceholders = [];\n  pageSize = 10;\n  startPage: number;\n  pageToLoadNext: number;\n  loadingNext = false;\n  loadingPrevious = false;\n  initialScrollRestoration: ScrollRestoration;\n\n  @ViewChildren(NbListItemComponent, { read: ElementRef }) listItems: QueryList<ElementRef<HTMLElement>>;\n\n  constructor(\n    private newsService: NewsService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private scrollService: NbLayoutScrollService,\n    private layoutService: NbLayoutRulerService,\n    @Inject(PLATFORM_ID) private platformId,\n    @Inject(NB_WINDOW) private window,\n  ) {\n    if (isPlatformBrowser(this.platformId) && this.window.history.scrollRestoration) {\n      // Prevent browsers from scrolling down to last scroll position, when navigating back to this page.\n      // It doesn't make sense here, since list is dynamic and we handle last user position ourselves,\n      // by storing page number in URL. So for this component, we disable scroll restoration.\n      // Don't forget to re-enable it in 'OnDestroy', since this configuration preserved for the whole session\n      // and it will not be reset after page reload.\n      this.initialScrollRestoration = window.history.scrollRestoration;\n      history.scrollRestoration = 'manual';\n    }\n  }\n\n  ngOnInit() {\n    const { page } = this.route.snapshot.queryParams;\n    this.startPage = page ? Number.parseInt(page, 10) : 100;\n    this.pageToLoadNext = this.startPage;\n  }\n\n  ngOnDestroy() {\n    if (this.initialScrollRestoration) {\n      this.window.history.scrollRestoration = this.initialScrollRestoration;\n    }\n  }\n\n  updateUrl(page) {\n    this.router.navigate(['.'], {\n      queryParams: { page },\n      replaceUrl: true,\n      relativeTo: this.route,\n      queryParamsHandling: 'merge',\n    });\n  }\n\n  loadPrevious() {\n    if (this.loadingPrevious || this.startPage === 1) {\n      return;\n    }\n\n    this.loadingPrevious = true;\n    this.topPlaceholders = new Array(this.pageSize);\n    this.restoreScrollPosition();\n    this.startPage--;\n    this.newsService.load(this.startPage, this.pageSize)\n      .subscribe(\n        news => {\n          this.topPlaceholders = [];\n          this.news.unshift(...news);\n          this.loadingPrevious = false;\n        },\n        error => this.startPage++,\n      );\n  }\n\n  loadNext() {\n    if (this.loadingNext) {\n      return;\n    }\n\n    this.loadingNext = true;\n    this.bottomPlaceholders = new Array(this.pageSize);\n    this.newsService.load(this.pageToLoadNext, this.pageSize)\n      .subscribe(news => {\n        this.bottomPlaceholders = [];\n        this.news.push(...news);\n        this.loadingNext = false;\n        this.pageToLoadNext++;\n      });\n  }\n\n  private restoreScrollPosition() {\n    concat(\n        this.layoutService.getDimensions(),\n        this.scrollService.getPosition(),\n        this.listItems.changes.pipe(take(1)),\n        this.layoutService.getDimensions(),\n        this.scrollService.getPosition(),\n      )\n      .pipe(toArray())\n      .subscribe(([ oldDimensions, oldScrollPosition, , dimensions, scrollPosition ]) => {\n        const oldHeight = oldDimensions.scrollHeight;\n        const oldScrollTop = oldScrollPosition.y;\n        const currentHeight = dimensions.scrollHeight;\n        const currentScrollTop = scrollPosition.y;\n        const heightDiff = currentHeight - oldHeight;\n\n        // chrome automatically changes scrollTop\n        if (oldScrollTop + heightDiff === currentScrollTop) {\n          return;\n        }\n\n        const newScrollTop = currentScrollTop + heightDiff;\n        this.scrollService.scrollTo(null, newScrollTop);\n      });\n  }\n}\n","import { Component } from '@angular/core';\nimport { NewsService } from './news.service';\n\n@Component({\n  template: `\n    <nb-card class=\"own-scroll\">\n      <nb-card-header>\n        Own scroll\n      </nb-card-header>\n      <nb-list\n        nbInfiniteList\n        [threshold]=\"500\"\n        (bottomThreshold)=\"loadNext(firstCard)\">\n        <nb-list-item *ngFor=\"let newsPost of firstCard.news\">\n          <nb-news-post [post]=\"newsPost\"></nb-news-post>\n        </nb-list-item>\n        <nb-list-item *ngFor=\"let _ of firstCard.placeholders\">\n          <nb-news-post-placeholder></nb-news-post-placeholder>\n        </nb-list-item>\n      </nb-list>\n    </nb-card>\n\n    <nb-card>\n      <nb-card-header>\n        Window scroll\n      </nb-card-header>\n      <nb-list\n        nbInfiniteList\n        listenWindowScroll\n        [threshold]=\"500\"\n        (bottomThreshold)=\"loadNext(secondCard)\">\n        <nb-list-item *ngFor=\"let newsPost of secondCard.news\">\n          <nb-news-post [post]=\"newsPost\"></nb-news-post>\n        </nb-list-item>\n        <nb-list-item *ngFor=\"let _ of secondCard.placeholders\">\n          <nb-news-post-placeholder></nb-news-post-placeholder>\n        </nb-list-item>\n      </nb-list>\n    </nb-card>\n  `,\n  styleUrls: [ 'infinite-news-list.component.scss', 'infinite-list-scroll-modes.component.scss' ],\n  providers: [ NewsService ],\n})\nexport class InfiniteListScrollModesComponent {\n\n  firstCard = {\n    news: [],\n    placeholders: [],\n    loading: false,\n    pageToLoadNext: 1,\n  };\n  secondCard = {\n    news: [],\n    placeholders: [],\n    loading: false,\n    pageToLoadNext: 1,\n  };\n  pageSize = 10;\n\n  constructor(private newsService: NewsService) {}\n\n  loadNext(cardData) {\n    if (cardData.loading) { return }\n\n    cardData.loading = true;\n    cardData.placeholders = new Array(this.pageSize);\n    this.newsService.load(cardData.pageToLoadNext, this.pageSize)\n      .subscribe(nextNews => {\n        cardData.placeholders = [];\n        cardData.news.push(...nextNews);\n        cardData.loading = false;\n        cardData.pageToLoadNext++;\n      });\n  }\n}\n","import { Component, HostBinding } from '@angular/core';\n\n@Component({\n  selector: 'nb-news-post-placeholder',\n  template: `\n    <div class=\"title-placeholder\"></div>\n    <div class=\"text-placeholder\"></div>\n    <div class=\"link-placeholder\"></div>\n  `,\n  styleUrls: [ '../news-post-placeholder.component.scss' ],\n})\nexport class NewsPostPlaceholderComponent {\n  @HostBinding('attr.aria-label')\n  label = 'Loading';\n}\n","import { Component, Input } from '@angular/core';\nimport { NewsPost } from '../news.service';\n\n@Component({\n  selector: 'nb-news-post',\n  template: `\n    <article>\n      <h2 class=\"h5\">{{post.title}}</h2>\n      <p>{{post.text}}</p>\n      <a [attr.href]=\"post.link\">Read full article</a>\n    </article>\n  `,\n})\nexport class NewsPostComponent {\n  @Input()\n  post: NewsPost;\n}\n"],"sourceRoot":"webpack:///"}