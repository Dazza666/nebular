{"version":3,"sources":["./src/playground/with-layout/autocomplete/autocomplete.module.ts","./src/playground/with-layout/autocomplete/autocomplete-disabled.component.ts","./src/playground/with-layout/autocomplete/autocomplete-disabled.component.html","./src/playground/with-layout/autocomplete/autocomplete-form.component.ts","./src/playground/with-layout/autocomplete/autocomplete-form.component.html","./src/playground/with-layout/autocomplete/autocomplete-active-first.component.ts","./src/playground/with-layout/autocomplete/autocomplete-active-first.component.html","./src/playground/with-layout/autocomplete/autocomplete-showcase.component.ts","./src/playground/with-layout/autocomplete/autocomplete-showcase.component.html","./src/playground/with-layout/autocomplete/autocomplete-routing.module.ts","./src/playground/with-layout/autocomplete/autocomplete-custom-display.component.ts","./src/playground/with-layout/autocomplete/autocomplete-custom-display.component.html","./src/playground/with-layout/autocomplete/autocomplete-group.component.ts","./src/playground/with-layout/autocomplete/autocomplete-group.component.html"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;GAIG;AAEsC;AAC0D;AACjB;AACR;AACR;AACQ;AACE;AACiB;AACJ;AACP;AACnC;;AAE/C;IAAA;KA4BkC;qGAArB,kBAAkB;kKAAlB,kBAAkB,kBAXpB;gBACP,6DAAY;gBACZ,0DAAW;gBACX,kEAAmB;gBACnB,mEAAoB;gBACpB,4DAAa;gBACb,sFAAyB;gBACzB,2DAAY;gBACZ,6DAAc;aACf;6BA5CH;CA8CkC;AAAH;mIAAlB,kBAAkB,mBA1B3B,8FAA6B;QAC7B,sFAAyB;QACzB,wFAA0B;QAC1B,yGAAkC;QAClC,qGAAgC;QAChC,8FAA6B,aAW7B,6DAAY;QACZ,0DAAW;QACX,kEAAmB;QACnB,mEAAoB;QACpB,4DAAa;QACb,sFAAyB;QACzB,2DAAY;QACZ,6DAAc,aAfd,8FAA6B;QAC7B,sFAAyB;QACzB,wFAA0B;QAC1B,yGAAkC;QAClC,qGAAgC;QAChC,8FAA6B;6FAapB,kBAAkB;cA5B9B,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,8FAA6B;oBAC7B,sFAAyB;oBACzB,wFAA0B;oBAC1B,yGAAkC;oBAClC,qGAAgC;oBAChC,8FAA6B;iBAC9B;gBACD,OAAO,EAAE;oBACP,8FAA6B;oBAC7B,sFAAyB;oBACzB,wFAA0B;oBAC1B,yGAAkC;oBAClC,qGAAgC;oBAChC,8FAA6B;iBAC9B;gBACD,OAAO,EAAE;oBACP,6DAAY;oBACZ,0DAAW;oBACX,kEAAmB;oBACnB,mEAAoB;oBACpB,4DAAa;oBACb,sFAAyB;oBACzB,2DAAY;oBACZ,6DAAc;iBACf;aACF;;;;;;;;;;;;;;AC7CD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;GAIG;AAEgE;AACtB;;;;;;;;;;;ICiBvC,+EACE;IAAA,uDACF;IAAA,4DAAY;;;IAF8B,4EAAgB;IACxD,0DACF;IADE,qFACF;;ADjBN;IAAA;QAME,YAAO,GAAG,CAAC,UAAU,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;QAC/C,aAAQ,GAAG,IAAI,CAAC;QAChB,qBAAgB,GAAG,IAAI,0DAAW,EAAE,CAAC;KAUtC;IARC,sDAAc,GAAd;QACE,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC;QAC/B,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,CAAC;SACjC;aAAM;YACL,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,CAAC;SAChC;IACH,CAAC;8GAZU,6BAA6B;iHAA7B,6BAA6B;YCd1C,6EACE;YAAA,kFAEE;YAAA,4EAA4C;YAApC,qJAAS,oBAAgB,IAAC;YAAU,0EAAe;YAAA,4DAAS;YAEpE,wEACE;YAAA,0EAAoB;YAAA,wEAAa;YAAA,oEAAG;YAAA,mEAAQ;YAAA,4DAAI;YAAC,qEAAS;YAAA,4DAAO;YACjE,uEAKF;YAAA,4DAAQ;YAER,yEACE;YAAA,2EAAoB;YAAA,yEAAa;YAAA,qEAAG;YAAA,uEAAW;YAAA,4DAAI;YAAA,4DAAO;YAC1D,uEAKF;YAAA,4DAAQ;YAER,4FACE;YAAA,uIACE;YAEJ,4DAAkB;YAEpB,4DAAe;YACjB,4DAAU;;;YAvBG,2DAAuB;YAAvB,+EAAuB;YASvB,0DAAuB;YAAvB,+EAAuB;YAQnB,0DAA8B;YAA9B,gFAA8B;;wCDxB/C;CA2BC;AAbyC;6FAA7B,6BAA6B;cALzC,uDAAS;eAAC;gBACT,WAAW,EAAE,wCAAwC;gBACrD,SAAS,EAAE,CAAC,wCAAwC,CAAC;gBACrD,eAAe,EAAE,qEAAuB,CAAC,MAAM;aAChD;;;;;;;;;;;;;;AEbD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;GAIG;AAEwE;AACrC;AAEO;AACG;;;;;;;;;;ICE1C,+EACE;IAAA,uDACF;IAAA,4DAAY;;;IAFsD,4EAAgB;IAChF,0DACF;IADE,qFACF;;;IAcA,+EACE;IAAA,uDACF;IAAA,4DAAY;;;IAFsD,4EAAgB;IAChF,0DACF;IADE,qFACF;;ADlBN;IAAA;KAmCC;IAtBC,4CAAQ,GAAR;QAAA,iBAYC;QAVC,IAAI,CAAC,OAAO,GAAG,CAAC,UAAU,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;QACpD,IAAI,CAAC,uBAAuB,GAAG,+CAAE,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAChD,IAAI,CAAC,uBAAuB,GAAG,+CAAE,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAEhD,IAAI,CAAC,gBAAgB,GAAG,IAAI,0DAAW,EAAE,CAAC;QAC1C,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,gBAAgB,CAAC,YAAY;aAC9D,IAAI,CACH,gEAAS,CAAC,EAAE,CAAC,EACb,0DAAG,CAAC,sBAAY,IAAI,YAAI,CAAC,MAAM,CAAC,YAAY,CAAC,EAAzB,CAAyB,CAAC,CAC/C,CAAC;IACN,CAAC;IAEO,0CAAM,GAAd,UAAe,KAAa;QAC1B,IAAM,WAAW,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC;QACxC,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,qBAAW,IAAI,kBAAW,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,WAAW,CAAC,EAA/C,CAA+C,CAAC,CAAC;IAC7F,CAAC;IAED,iDAAa,GAAb,UAAc,KAAa;QACzB,IAAI,CAAC,uBAAuB,GAAG,+CAAE,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;IACxD,CAAC;sGA7BU,yBAAyB;6GAAzB,yBAAyB;YCjBtC,6EACE;YAAA,kFAEE;YAAA,sEAOA;YAAA,2FAEE;YAAA,iIACE;;YAGJ,4DAAkB;YAElB,2EAQA;YANE,sKAAiB,yBAAqB,IAAC;YAFzC,4DAQA;YAAA,2FAEE;YAAA,mIACE;;YAGJ,4DAAkB;YAEpB,4DAAe;YACjB,4DAAU;;;;YA/BJ,0DAAgC;YAAhC,6FAAgC;YAQrB,0DAAsD;YAAtD,iKAAsD;YAOjE,0DAAiB;YAAjB,8EAAiB;YASN,0DAAsD;YAAtD,kKAAsD;;oCD5BvE;CA+CC;AA9BqC;6FAAzB,yBAAyB;cALrC,uDAAS;eAAC;gBACT,QAAQ,EAAE,0BAA0B;gBACpC,eAAe,EAAE,qEAAuB,CAAC,MAAM;gBAC/C,WAAW,EAAE,oCAAoC;aAClD;;;;;;;;;;;;;;AEhBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;GAIG;AAEwE;AACrC;AAEO;AACG;;;;;;;;;;ICE1C,+EACE;IAAA,uDACF;IAAA,4DAAY;;;IAF+C,4EAAgB;IACzE,0DACF;IADE,qFACF;;ADFN;IAAA;KA+BC;IApBC,mDAAQ,GAAR;QAAA,iBAaC;QAXC,IAAI,CAAC,OAAO,GAAG,CAAC,UAAU,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;QACpD,IAAI,CAAC,gBAAgB,GAAG,+CAAE,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAEzC,IAAI,CAAC,gBAAgB,GAAG,IAAI,0DAAW,EAAE,CAAC;QAE1C,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC,YAAY;aACvD,IAAI,CACH,gEAAS,CAAC,EAAE,CAAC,EACb,0DAAG,CAAC,sBAAY,IAAI,YAAI,CAAC,MAAM,CAAC,YAAY,CAAC,EAAzB,CAAyB,CAAC,CAC/C,CAAC;IAEN,CAAC;IAEO,iDAAM,GAAd,UAAe,KAAa;QAC1B,IAAM,WAAW,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC;QACxC,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,qBAAW,IAAI,kBAAW,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,WAAW,CAAC,EAA/C,CAA+C,CAAC,CAAC;IAC7F,CAAC;oHAxBU,gCAAgC;oHAAhC,gCAAgC;YCjB7C,6EACE;YAAA,+EAEE;YAAA,sEAOA;YAAA,wFAEE;YAAA,wIACE;;YAGJ,4DAAkB;YAEpB,4DAAe;YACjB,4DAAU;;;YAfJ,0DAAgC;YAAhC,6FAAgC;YAMX,0DAAoB;YAApB,6EAAoB;YAE9B,0DAA+C;YAA/C,0JAA+C;;2CDZhE;CA2CC;AA1B4C;6FAAhC,gCAAgC;cAL5C,uDAAS;eAAC;gBACT,QAAQ,EAAE,8BAA8B;gBACxC,eAAe,EAAE,qEAAuB,CAAC,MAAM;gBAC/C,WAAW,EAAE,4CAA4C;aAC1D;;;;;;;;;;;;;;AEhBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;GAIG;AAEmF;AAChD;AACD;;;;;;;;;;ICI/B,+EACE;IAAA,uDACF;IAAA,4DAAY;;;IAF+C,4EAAgB;IACzE,0DACF;IADE,qFACF;;ADJN;IAAA;KAoCC;IAxBC,gDAAQ,GAAR;QACE,IAAI,CAAC,OAAO,GAAG,CAAC,UAAU,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;QACpD,IAAI,CAAC,gBAAgB,GAAG,+CAAE,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAC3C,CAAC;IAEO,8CAAM,GAAd,UAAe,KAAa;QAC1B,IAAM,WAAW,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC;QACxC,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,qBAAW,IAAI,kBAAW,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,WAAW,CAAC,EAA/C,CAA+C,CAAC,CAAC;IAC7F,CAAC;IAED,0DAAkB,GAAlB,UAAmB,KAAa;QAAhC,iBAIC;QAHC,OAAO,+CAAE,CAAC,KAAK,CAAC,CAAC,IAAI,CACnB,0DAAG,CAAC,sBAAY,IAAI,YAAI,CAAC,MAAM,CAAC,YAAY,CAAC,EAAzB,CAAyB,CAAC,CAC/C,CAAC;IACJ,CAAC;IAED,gDAAQ,GAAR;QACE,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;IAClF,CAAC;IAED,yDAAiB,GAAjB,UAAkB,MAAM;QACtB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC;IAC1D,CAAC;8GA7BU,6BAA6B;iHAA7B,6BAA6B;;;;;;YCf1C,6EACE;YAAA,+EAEE;YAAA,8EAOA;YAJE,oJAAS,cAAU,IAAC;YAHtB,4DAOA;YAAA,wFAEE;YAFqB,sLAAkB,6BAAyB,IAAC;YAEjE,qIACE;;YAGJ,4DAAkB;YAEpB,4DAAe;YACjB,4DAAU;;;YAXJ,0DAAuB;YAAvB,+EAAuB;YAIZ,0DAA+C;YAA/C,0JAA+C;;wCDZhE;CA8CC;AA/ByC;6FAA7B,6BAA6B;cALzC,uDAAS;eAAC;gBACT,QAAQ,EAAE,0BAA0B;gBACpC,eAAe,EAAE,qEAAuB,CAAC,MAAM;gBAC/C,WAAW,EAAE,wCAAwC;aACtD;gBAMyB,KAAK;kBAA5B,uDAAS;mBAAC,WAAW;;;;;;;;;;;;;;AEpBxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;GAIG;AAEsC;AACY;AAC6B;AACR;AACE;AACiB;AACJ;AACP;;;AAElF,IAAM,MAAM,GAAY;IACtB;QACE,IAAI,EAAE,iCAAiC;QACvC,SAAS,EAAE,8FAA6B;KACzC;IACD;QACE,IAAI,EAAE,6BAA6B;QACnC,SAAS,EAAE,sFAAyB;KACrC;IACD;QACE,IAAI,EAAE,8BAA8B;QACpC,SAAS,EAAE,wFAA0B;KACtC;IACD;QACE,IAAI,EAAE,uCAAuC;QAC7C,SAAS,EAAE,yGAAkC;KAC9C;IACD;QACE,IAAI,EAAE,qCAAqC;QAC3C,SAAS,EAAE,qGAAgC;KAC5C;IACD;QACE,IAAI,EAAE,iCAAiC;QACvC,SAAS,EAAE,8FAA6B;KACzC;CACF,CAAC;AAEF;IAAA;KAIyC;4GAA5B,yBAAyB;gLAAzB,yBAAyB,kBAH3B,CAAE,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAE,EAC/B,4DAAY;oCA5CzB;CA8CyC;AAAH;mIAAzB,yBAAyB,uFAFzB,4DAAY;6FAEZ,yBAAyB;cAJrC,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAE,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAE;gBAC1C,OAAO,EAAE,CAAE,4DAAY,CAAE;aAC1B;;;;;;;;;;;;;;AC7CD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;GAIG;AAEwE;AACrC;AAEO;AACG;;;;;;;;;;ICE1C,+EACE;IAAA,uDACF;IAAA,4DAAY;;;IAF+C,4EAAgB;IACzE,0DACF;IADE,qFACF;;ADFN;IAAA;KAkCC;IAvBC,qDAAQ,GAAR;QAAA,iBAaC;QAXC,IAAI,CAAC,OAAO,GAAG,CAAC,UAAU,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;QACpD,IAAI,CAAC,gBAAgB,GAAG,+CAAE,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAEzC,IAAI,CAAC,gBAAgB,GAAG,IAAI,0DAAW,EAAE,CAAC;QAE1C,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC,YAAY;aACvD,IAAI,CACH,gEAAS,CAAC,EAAE,CAAC,EACb,0DAAG,CAAC,sBAAY,IAAI,YAAI,CAAC,MAAM,CAAC,YAAY,CAAC,EAAzB,CAAyB,CAAC,CAC/C,CAAC;IAEN,CAAC;IAEO,mDAAM,GAAd,UAAe,KAAa;QAC1B,IAAM,WAAW,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC;QACxC,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,qBAAW,IAAI,kBAAW,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,WAAW,CAAC,EAA/C,CAA+C,CAAC,CAAC;IAC7F,CAAC;IAED,uDAAU,GAAV,UAAW,KAAa;QACtB,OAAO,KAAK,CAAC,WAAW,EAAE,CAAC;IAC7B,CAAC;wHA5BU,kCAAkC;sHAAlC,kCAAkC;YCjB/C,6EACE;YAAA,+EAEE;YAAA,sEAOA;YAAA,wFAEE;YAAA,0IACE;;YAGJ,4DAAkB;YAEpB,4DAAe;YACjB,4DAAU;;;YAfJ,0DAAgC;YAAhC,6FAAgC;YAMX,0DAA8B;YAA9B,2FAA8B;YAExC,0DAA+C;YAA/C,0JAA+C;;6CDZhE;CA8CC;AA7B8C;6FAAlC,kCAAkC;cAL9C,uDAAS;eAAC;gBACT,QAAQ,EAAE,gCAAgC;gBAC1C,eAAe,EAAE,qEAAuB,CAAC,MAAM;gBAC/C,WAAW,EAAE,8CAA8C;aAC5D;;;;;;;;;;;;;;AEhBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;GAIG;AAEwE;AACrC;AAEO;AACG;;;;;;;;;;;ICGxC,+EACE;IAAA,uDACF;IAAA,4DAAY;;;IAFqC,4EAAgB;IAC/D,0DACF;IADE,qFACF;;;IAHF,qFACE;IAAA,oJACE;IAEJ,4DAAkB;;;IAJkE,gFAAoB;IAC3F,0DAAqC;IAArC,sFAAqC;;ADIxD;IAAA;KA0DC;IA/CC,6CAAQ,GAAR;QAAA,iBAyBC;QAvBC,IAAI,CAAC,MAAM,GAAG;YACZ;gBACE,IAAI,EAAE,SAAS;gBACf,QAAQ,EAAE,CAAC,WAAW,EAAE,WAAW,EAAE,WAAW,CAAC;aAClD;YACD;gBACE,IAAI,EAAE,SAAS;gBACf,QAAQ,EAAE,CAAC,WAAW,EAAE,WAAW,EAAE,WAAW,CAAC;aAClD;YACD;gBACE,IAAI,EAAE,SAAS;gBACf,QAAQ,EAAE,CAAC,WAAW,EAAE,WAAW,EAAE,WAAW,CAAC;aACpD;SAAC,CAAC;QAEH,IAAI,CAAC,eAAe,GAAG,+CAAE,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACvC,IAAI,CAAC,gBAAgB,GAAG,IAAI,0DAAW,EAAE,CAAC;QAE1C,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,gBAAgB,CAAC,YAAY;aACtD,IAAI,CACH,gEAAS,CAAC,EAAE,CAAC,EACb,0DAAG,CAAC,sBAAY,IAAI,YAAI,CAAC,MAAM,CAAC,YAAY,CAAC,EAAzB,CAAyB,CAAC,CAC/C,CAAC;IAEN,CAAC;IAEO,mDAAc,GAAtB,UAAuB,QAAkB,EAAE,WAAmB;QAC5D,OAAO,QAAQ,CAAC,MAAM,CAAC,qBAAW,IAAI,kBAAW,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,WAAW,CAAC,EAA/C,CAA+C,CAAC,CAAC;IACzF,CAAC;IAEO,2CAAM,GAAd,UAAe,KAAa;QAA5B,iBAUC;QATC,IAAM,WAAW,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC;QACxC,OAAO,IAAI,CAAC,MAAM;aACf,GAAG,CAAC,eAAK;YACR,OAAO;gBACL,IAAI,EAAE,KAAK,CAAC,IAAI;gBAChB,QAAQ,EAAE,KAAI,CAAC,cAAc,CAAC,KAAK,CAAC,QAAQ,EAAE,WAAW,CAAC;aAC3D;QACH,CAAC,CAAC;aACD,MAAM,CAAC,eAAK,IAAI,YAAK,CAAC,QAAQ,CAAC,MAAM,EAArB,CAAqB,CAAC,CAAC;IAC5C,CAAC;IAED,8CAAS,GAAT,UAAU,KAAK,EAAE,IAAI;QACnB,OAAO,IAAI,CAAC,IAAI,CAAC;IACnB,CAAC;wGAnDU,0BAA0B;8GAA1B,0BAA0B;YCtBvC,6EACE;YAAA,+EAEE;YAAA,sEAOA;YAAA,2FAEE;YAAA,8IACE;;YAKJ,4DAAkB;YAEpB,4DAAe;YACjB,4DAAU;;;YAjBJ,0DAAgC;YAAhC,6FAAgC;YAQf,0DAAiE;YAAjE,yJAAiE;;qCDZxF;CA2EC;AArDsC;6FAA1B,0BAA0B;cALtC,uDAAS;eAAC;gBACT,QAAQ,EAAE,uBAAuB;gBACjC,eAAe,EAAE,qEAAuB,CAAC,MAAM;gBAC/C,WAAW,EAAE,qCAAqC;aACnD","file":"autocomplete-autocomplete-module.js","sourcesContent":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport { NgModule } from '@angular/core';\nimport { NbAutocompleteModule, NbButtonModule, NbCardModule, NbInputModule } from '@nebular/theme';\nimport { AutocompleteShowcaseComponent } from './autocomplete-showcase.component';\nimport { AutocompleteRoutingModule } from './autocomplete-routing.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AutocompleteFormComponent } from './autocomplete-form.component';\nimport { AutocompleteGroupComponent } from './autocomplete-group.component';\nimport { AutocompleteCustomDisplayComponent } from './autocomplete-custom-display.component';\nimport { AutocompleteActiveFirstComponent } from './autocomplete-active-first.component';\nimport { AutocompleteDisabledComponent } from './autocomplete-disabled.component';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [\n    AutocompleteShowcaseComponent,\n    AutocompleteFormComponent,\n    AutocompleteGroupComponent,\n    AutocompleteCustomDisplayComponent,\n    AutocompleteActiveFirstComponent,\n    AutocompleteDisabledComponent,\n  ],\n  exports: [\n    AutocompleteShowcaseComponent,\n    AutocompleteFormComponent,\n    AutocompleteGroupComponent,\n    AutocompleteCustomDisplayComponent,\n    AutocompleteActiveFirstComponent,\n    AutocompleteDisabledComponent,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NbAutocompleteModule,\n    NbInputModule,\n    AutocompleteRoutingModule,\n    NbCardModule,\n    NbButtonModule,\n  ],\n})\nexport class AutocompleteModule {}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n  templateUrl: './autocomplete-disabled.component.html',\n  styleUrls: ['./autocomplete-disabled.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AutocompleteDisabledComponent {\n  options = ['Option 1', 'Option 2', 'Option 3'];\n  disabled = true;\n  inputFormControl = new FormControl();\n\n  toggleDisabled() {\n    this.disabled = !this.disabled;\n    if (this.disabled) {\n      this.inputFormControl.disable();\n    } else {\n      this.inputFormControl.enable();\n    }\n  }\n}\n","<nb-card size=\"small\">\n  <nb-card-body class=\"example-items-col\">\n\n    <button (click)=\"toggleDisabled()\" nbButton>Toggle disabled</button>\n\n    <label>\n      <span class=\"label\">Disabled via <i>disabled</i> attribute</span>\n      <input [nbAutocomplete]=\"auto\"\n             [disabled]=\"disabled\"\n             nbInput\n             type=\"text\"\n             placeholder=\"Plain input\" />\n    </label>\n\n    <label>\n      <span class=\"label\">Disabled via <i>formControl</i></span>\n      <input [nbAutocomplete]=\"auto\"\n             [formControl]=\"inputFormControl\"\n             nbInput\n             type=\"text\"\n             placeholder=\"Form control\" />\n    </label>\n\n    <nb-autocomplete #auto>\n      <nb-option *ngFor=\"let option of options\" [value]=\"option\">\n        {{ option }}\n      </nb-option>\n    </nb-autocomplete>\n\n  </nb-card-body>\n</nb-card>\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { Observable, of } from 'rxjs';\n\nimport { FormControl } from '@angular/forms';\nimport { map, startWith } from 'rxjs/operators';\n\n@Component({\n  selector: 'nb-autocomplete-showcase',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  templateUrl: './autocomplete-form.component.html',\n})\nexport class AutocompleteFormComponent implements OnInit {\n\n  options: string[];\n  filteredControlOptions$: Observable<string[]>;\n  filteredNgModelOptions$: Observable<string[]>;\n  inputFormControl: FormControl;\n  value: string;\n\n  ngOnInit() {\n\n    this.options = ['Option 1', 'Option 2', 'Option 3'];\n    this.filteredControlOptions$ = of(this.options);\n    this.filteredNgModelOptions$ = of(this.options);\n\n    this.inputFormControl = new FormControl();\n    this.filteredControlOptions$ = this.inputFormControl.valueChanges\n      .pipe(\n        startWith(''),\n        map(filterString => this.filter(filterString)),\n      );\n  }\n\n  private filter(value: string): string[] {\n    const filterValue = value.toLowerCase();\n    return this.options.filter(optionValue => optionValue.toLowerCase().includes(filterValue));\n  }\n\n  onModelChange(value: string) {\n    this.filteredNgModelOptions$ = of(this.filter(value));\n  }\n}\n\n","<nb-card size=\"small\">\n  <nb-card-body class=\"example-items-rows\">\n\n    <input\n      [formControl]=\"inputFormControl\"\n      nbInput\n      type=\"text\"\n      placeholder=\"Form control\"\n      [nbAutocomplete]=\"autoControl\" />\n\n    <nb-autocomplete #autoControl>\n\n      <nb-option *ngFor=\"let option of filteredControlOptions$ | async\" [value]=\"option\">\n        {{ option }}\n      </nb-option>\n\n    </nb-autocomplete>\n\n    <input\n      [ngModel]=\"value\"\n      (ngModelChange)=\"onModelChange($event)\"\n      nbInput\n      type=\"text\"\n      placeholder=\"ngModel\"\n      [nbAutocomplete]=\"autoNgModel\" />\n\n    <nb-autocomplete #autoNgModel>\n\n      <nb-option *ngFor=\"let option of filteredNgModelOptions$ | async\" [value]=\"option\">\n        {{ option }}\n      </nb-option>\n\n    </nb-autocomplete>\n\n  </nb-card-body>\n</nb-card>\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { Observable, of } from 'rxjs';\n\nimport { FormControl } from '@angular/forms';\nimport { map, startWith } from 'rxjs/operators';\n\n@Component({\n  selector: 'nb-autocomplete-active-first',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  templateUrl: './autocomplete-active-first.component.html',\n})\nexport class AutocompleteActiveFirstComponent implements OnInit {\n\n  options: string[];\n  filteredOptions$: Observable<string[]>;\n  inputFormControl: FormControl;\n\n  ngOnInit() {\n\n    this.options = ['Option 1', 'Option 2', 'Option 3'];\n    this.filteredOptions$ = of(this.options);\n\n    this.inputFormControl = new FormControl();\n\n    this.filteredOptions$ = this.inputFormControl.valueChanges\n      .pipe(\n        startWith(''),\n        map(filterString => this.filter(filterString)),\n      );\n\n  }\n\n  private filter(value: string): string[] {\n    const filterValue = value.toLowerCase();\n    return this.options.filter(optionValue => optionValue.toLowerCase().includes(filterValue));\n  }\n\n}\n\n","<nb-card size=\"small\">\n  <nb-card-body>\n\n    <input\n      [formControl]=\"inputFormControl\"\n      nbInput\n      type=\"text\"\n      placeholder=\"Enter value\"\n      [nbAutocomplete]=\"auto\" />\n\n    <nb-autocomplete #auto [activeFirst]=\"true\">\n\n      <nb-option *ngFor=\"let option of filteredOptions$ | async\" [value]=\"option\">\n        {{ option }}\n      </nb-option>\n\n    </nb-autocomplete>\n\n  </nb-card-body>\n</nb-card>\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport { ChangeDetectionStrategy, Component, ViewChild, OnInit } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'nb-autocomplete-showcase',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  templateUrl: './autocomplete-showcase.component.html',\n})\nexport class AutocompleteShowcaseComponent implements OnInit {\n\n  options: string[];\n  filteredOptions$: Observable<string[]>;\n\n  @ViewChild('autoInput') input;\n\n  ngOnInit() {\n    this.options = ['Option 1', 'Option 2', 'Option 3'];\n    this.filteredOptions$ = of(this.options);\n  }\n\n  private filter(value: string): string[] {\n    const filterValue = value.toLowerCase();\n    return this.options.filter(optionValue => optionValue.toLowerCase().includes(filterValue));\n  }\n\n  getFilteredOptions(value: string): Observable<string[]> {\n    return of(value).pipe(\n      map(filterString => this.filter(filterString)),\n    );\n  }\n\n  onChange() {\n    this.filteredOptions$ = this.getFilteredOptions(this.input.nativeElement.value);\n  }\n\n  onSelectionChange($event) {\n    this.filteredOptions$ = this.getFilteredOptions($event);\n  }\n\n}\n\n","<nb-card size=\"small\">\n  <nb-card-body>\n\n    <input #autoInput\n      nbInput\n      type=\"text\"\n      (input)=\"onChange()\"\n      placeholder=\"Enter value\"\n      [nbAutocomplete]=\"auto\" />\n\n    <nb-autocomplete #auto (selectedChange)=\"onSelectionChange($event)\">\n\n      <nb-option *ngFor=\"let option of filteredOptions$ | async\" [value]=\"option\">\n        {{ option }}\n      </nb-option>\n\n    </nb-autocomplete>\n\n  </nb-card-body>\n</nb-card>\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Route} from '@angular/router';\nimport { AutocompleteShowcaseComponent } from './autocomplete-showcase.component';\nimport { AutocompleteFormComponent } from './autocomplete-form.component';\nimport { AutocompleteGroupComponent } from './autocomplete-group.component';\nimport { AutocompleteCustomDisplayComponent } from './autocomplete-custom-display.component';\nimport { AutocompleteActiveFirstComponent } from './autocomplete-active-first.component';\nimport { AutocompleteDisabledComponent } from './autocomplete-disabled.component';\n\nconst routes: Route[] = [\n  {\n    path: 'autocomplete-showcase.component',\n    component: AutocompleteShowcaseComponent,\n  },\n  {\n    path: 'autocomplete-form.component',\n    component: AutocompleteFormComponent,\n  },\n  {\n    path: 'autocomplete-group.component',\n    component: AutocompleteGroupComponent,\n  },\n  {\n    path: 'autocomplete-custom-display.component',\n    component: AutocompleteCustomDisplayComponent,\n  },\n  {\n    path: 'autocomplete-active-first.component',\n    component: AutocompleteActiveFirstComponent,\n  },\n  {\n    path: 'autocomplete-disabled.component',\n    component: AutocompleteDisabledComponent,\n  },\n];\n\n@NgModule({\n  imports: [ RouterModule.forChild(routes) ],\n  exports: [ RouterModule ],\n})\nexport class AutocompleteRoutingModule {}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { Observable, of } from 'rxjs';\n\nimport { FormControl } from '@angular/forms';\nimport { map, startWith } from 'rxjs/operators';\n\n@Component({\n  selector: 'nb-autocomplete-custom-display',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  templateUrl: './autocomplete-custom-display.component.html',\n})\nexport class AutocompleteCustomDisplayComponent implements OnInit {\n\n  options: string[];\n  filteredOptions$: Observable<string[]>;\n  inputFormControl: FormControl;\n\n  ngOnInit() {\n\n    this.options = ['Option 1', 'Option 2', 'Option 3'];\n    this.filteredOptions$ = of(this.options);\n\n    this.inputFormControl = new FormControl();\n\n    this.filteredOptions$ = this.inputFormControl.valueChanges\n      .pipe(\n        startWith(''),\n        map(filterString => this.filter(filterString)),\n      );\n\n  }\n\n  private filter(value: string): string[] {\n    const filterValue = value.toLowerCase();\n    return this.options.filter(optionValue => optionValue.toLowerCase().includes(filterValue));\n  }\n\n  viewHandle(value: string) {\n    return value.toUpperCase();\n  }\n}\n\n","<nb-card size=\"small\">\n  <nb-card-body>\n\n    <input\n      [formControl]=\"inputFormControl\"\n      nbInput\n      type=\"text\"\n      placeholder=\"Enter value\"\n      [nbAutocomplete]=\"auto\" />\n\n    <nb-autocomplete #auto [handleDisplayFn]=\"viewHandle\">\n\n      <nb-option *ngFor=\"let option of filteredOptions$ | async\" [value]=\"option\">\n        {{ option }}\n      </nb-option>\n\n    </nb-autocomplete>\n\n  </nb-card-body>\n</nb-card>\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { Observable, of } from 'rxjs';\n\nimport { FormControl } from '@angular/forms';\nimport { map, startWith } from 'rxjs/operators';\n\nexport interface Group {\n  name: string;\n  children: string[];\n}\n\n@Component({\n  selector: 'nb-autocomplete-group',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  templateUrl: './autocomplete-group.component.html',\n})\nexport class AutocompleteGroupComponent implements OnInit {\n\n  groups: Group[];\n  filteredGroups$: Observable<Group[]>;\n  inputFormControl: FormControl;\n\n  ngOnInit() {\n\n    this.groups = [\n      {\n        name: 'Group 1',\n        children: ['Option 11', 'Option 12', 'Option 13'],\n      },\n      {\n        name: 'Group 2',\n        children: ['Option 21', 'Option 22', 'Option 23'],\n      },\n      {\n        name: 'Group 3',\n        children: ['Option 31', 'Option 32', 'Option 33'],\n    }];\n\n    this.filteredGroups$ = of(this.groups);\n    this.inputFormControl = new FormControl();\n\n    this.filteredGroups$ = this.inputFormControl.valueChanges\n      .pipe(\n        startWith(''),\n        map(filterString => this.filter(filterString)),\n      );\n\n  }\n\n  private filterChildren(children: string[], filterValue: string) {\n    return children.filter(optionValue => optionValue.toLowerCase().includes(filterValue));\n  }\n\n  private filter(value: string): Group[] {\n    const filterValue = value.toLowerCase();\n    return this.groups\n      .map(group => {\n        return {\n          name: group.name,\n          children: this.filterChildren(group.children, filterValue),\n        }\n      })\n      .filter(group => group.children.length);\n  }\n\n  trackByFn(index, item) {\n    return item.name;\n  }\n\n}\n\n","<nb-card size=\"medium\">\n  <nb-card-body>\n\n    <input\n      [formControl]=\"inputFormControl\"\n      nbInput\n      type=\"text\"\n      placeholder=\"Enter value\"\n      [nbAutocomplete]=\"auto\" />\n\n    <nb-autocomplete #auto>\n\n      <nb-option-group *ngFor=\"let group of filteredGroups$ | async; trackBy: trackByFn\"  [title]=\"group.name\" >\n        <nb-option *ngFor=\"let option of group.children\" [value]=\"option\">\n          {{ option }}\n        </nb-option>\n      </nb-option-group>\n\n    </nb-autocomplete>\n\n  </nb-card-body>\n</nb-card>\n"],"sourceRoot":"webpack:///"}