{"version":3,"sources":["./src/playground/with-layout/tree-grid/tree-grid-showcase.component.ts","./src/playground/with-layout/tree-grid/tree-grid-showcase.component.html","./src/playground/with-layout/tree-grid/tree-grid-basic.component.ts","./src/playground/with-layout/tree-grid/tree-grid.module.ts","./src/playground/with-layout/tree-grid/tree-grid-custom-node-structure.component.ts","./src/playground/with-layout/tree-grid/tree-grid-disable-click-toggle.component.ts","./src/playground/with-layout/tree-grid/tree-grid-custom-icons.component.ts","./src/playground/with-layout/tree-grid/tree-grid-filterable.component.ts","./src/playground/with-layout/tree-grid/tree-grid-routing.module.ts","./src/playground/with-layout/tree-grid/tree-grid-sortable.component.ts","./src/playground/with-layout/tree-grid/tree-grid-responsive.component.ts"],"names":[],"mappings":"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","file":"tree-grid-tree-grid-module.js","sourcesContent":["/*\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport { Component, Input } from '@angular/core';\nimport { NbSortDirection, NbSortRequest, NbTreeGridDataSource, NbTreeGridDataSourceBuilder } from '@nebular/theme';\n\ninterface TreeNode<T> {\n  data: T;\n  children?: TreeNode<T>[];\n  expanded?: boolean;\n}\n\ninterface FSEntry {\n  name: string;\n  size: string;\n  kind: string;\n  items?: number;\n}\n\n@Component({\n  selector: 'nb-tree-grid-showcase',\n  templateUrl: './tree-grid-showcase.component.html',\n  styleUrls: ['./tree-grid-shared.scss', './tree-grid-showcase.component.scss'],\n})\nexport class TreeGridShowcaseComponent {\n  customColumn = 'name';\n  defaultColumns = [ 'size', 'kind', 'items' ];\n  allColumns = [ this.customColumn, ...this.defaultColumns ];\n\n  dataSource: NbTreeGridDataSource<FSEntry>;\n\n  sortColumn: string;\n  sortDirection: NbSortDirection = NbSortDirection.NONE;\n\n  constructor(private dataSourceBuilder: NbTreeGridDataSourceBuilder<FSEntry>) {\n    this.dataSource = this.dataSourceBuilder.create(this.data);\n  }\n\n  updateSort(sortRequest: NbSortRequest): void {\n    this.sortColumn = sortRequest.column;\n    this.sortDirection = sortRequest.direction;\n  }\n\n  getSortDirection(column: string): NbSortDirection {\n    if (this.sortColumn === column) {\n      return this.sortDirection;\n    }\n    return NbSortDirection.NONE;\n  }\n\n  private data: TreeNode<FSEntry>[] = [\n    {\n      data: { name: 'Projects', size: '1.8 MB', items: 5, kind: 'dir' },\n      children: [\n        { data: { name: 'project-1.doc', kind: 'doc', size: '240 KB' } },\n        { data: { name: 'project-2.doc', kind: 'doc', size: '290 KB' } },\n        {\n          data: { name: 'project-3', kind: 'dir', size: '466 KB', items: 3 },\n          children: [\n            { data: { name: 'project-3A.doc', kind: 'doc', size: '200 KB' } },\n            { data: { name: 'project-3B.doc', kind: 'doc', size: '266 KB' } },\n            { data: { name: 'project-3C.doc', kind: 'doc', size: '0' } },\n          ],\n        },\n        { data: { name: 'project-4.docx', kind: 'docx', size: '900 KB' } },\n      ],\n    },\n    {\n      data: { name: 'Reports', kind: 'dir', size: '400 KB', items: 2 },\n      children: [\n        {\n          data: { name: 'Report 1', kind: 'dir', size: '100 KB', items: 1 },\n          children: [\n            { data: { name: 'report-1.doc', kind: 'doc', size: '100 KB' } },\n          ],\n        },\n        {\n          data: { name: 'Report 2', kind: 'dir', size: '300 KB', items: 2 },\n          children: [\n            { data: { name: 'report-2.doc', kind: 'doc', size: '290 KB' } },\n            { data: { name: 'report-2-note.txt', kind: 'txt', size: '10 KB' } },\n          ],\n        },\n      ],\n    },\n    {\n      data: { name: 'Other', kind: 'dir', size: '109 MB', items: 2 },\n      children: [\n        { data: { name: 'backup.bkp', kind: 'bkp', size: '107 MB' } },\n        { data: { name: 'secret-note.txt', kind: 'txt', size: '2 MB' } },\n      ],\n    },\n  ];\n\n  getShowOn(index: number) {\n    const minWithForMultipleColumns = 400;\n    const nextColumnStep = 100;\n    return minWithForMultipleColumns + (nextColumnStep * index);\n  }\n}\n\n@Component({\n  selector: 'nb-fs-icon',\n  template: `\n    <nb-tree-grid-row-toggle [expanded]=\"expanded\" *ngIf=\"isDir(); else fileIcon\">\n    </nb-tree-grid-row-toggle>\n    <ng-template #fileIcon>\n      <nb-icon icon=\"file-text-outline\"></nb-icon>\n    </ng-template>\n  `,\n})\nexport class FsIconComponent {\n  @Input() kind: string;\n  @Input() expanded: boolean;\n\n  isDir(): boolean {\n    return this.kind === 'dir';\n  }\n}\n","<nb-card>\n  <nb-card-body>\n\n    <label class=\"search-label\" for=\"search\">Search:</label>\n    <input nbInput [nbFilterInput]=\"dataSource\" id=\"search\" class=\"search-input\">\n\n    <table [nbTreeGrid]=\"dataSource\" [nbSort]=\"dataSource\" (sort)=\"updateSort($event)\">\n\n      <tr nbTreeGridHeaderRow *nbTreeGridHeaderRowDef=\"allColumns\"></tr>\n      <tr nbTreeGridRow *nbTreeGridRowDef=\"let row; columns: allColumns\"></tr>\n\n      <ng-container [nbTreeGridColumnDef]=\"customColumn\">\n        <th nbTreeGridHeaderCell [nbSortHeader]=\"getSortDirection(customColumn)\" *nbTreeGridHeaderCellDef>\n          {{customColumn}}\n        </th>\n        <td nbTreeGridCell *nbTreeGridCellDef=\"let row\">\n          <nb-fs-icon [kind]=\"row.data.kind\" [expanded]=\"row.expanded\"></nb-fs-icon>\n          {{row.data[customColumn]}}\n        </td>\n      </ng-container>\n\n      <ng-container *ngFor=\"let column of defaultColumns; let index = index\"\n                    [nbTreeGridColumnDef]=\"column\"\n                    [showOn]=\"getShowOn(index)\">\n        <th nbTreeGridHeaderCell [nbSortHeader]=\"getSortDirection(column)\" *nbTreeGridHeaderCellDef>\n          {{column}}\n        </th>\n        <td nbTreeGridCell *nbTreeGridCellDef=\"let row\">{{row.data[column] || '-'}}</td>\n      </ng-container>\n\n    </table>\n\n  </nb-card-body>\n</nb-card>\n","import { Component } from '@angular/core';\n\ninterface TreeNode<T> {\n  data: T;\n  children?: TreeNode<T>[];\n  expanded?: boolean;\n}\n\ninterface FSEntry {\n  name: string;\n  size: string;\n  kind: string;\n  items?: number;\n}\n\n@Component({\n  template: `\n    <nb-card>\n      <nb-card-body>\n\n        <table [nbTreeGrid]=\"data\" equalColumnsWidth>\n\n          <tr nbTreeGridRow *nbTreeGridRowDef=\"let row; columns: allColumns\"></tr>\n\n          <ng-container [nbTreeGridColumnDef]=\"customColumn\">\n            <td nbTreeGridCell *nbTreeGridCellDef=\"let row\">\n\n              <nb-tree-grid-row-toggle\n                [expanded]=\"row.expanded\"\n                *ngIf=\"row.data.kind === 'dir'\">\n              </nb-tree-grid-row-toggle>\n\n              {{row.data.name}}\n\n            </td>\n          </ng-container>\n\n          <ng-container *ngFor=\"let column of defaultColumns\" [nbTreeGridColumnDef]=\"column\">\n            <td nbTreeGridCell *nbTreeGridCellDef=\"let row\">{{row.data[column]}}</td>\n          </ng-container>\n\n        </table>\n\n      </nb-card-body>\n    </nb-card>\n  `,\n  styleUrls: ['./tree-grid-shared.scss'],\n})\nexport class TreeGridBasicComponent {\n  customColumn = 'name';\n  defaultColumns = [ 'size', 'kind', 'items' ];\n  allColumns = [ this.customColumn, ...this.defaultColumns ];\n\n  data: TreeNode<FSEntry>[] = [\n    {\n      data: { name: 'Projects', size: '1.8 MB', items: 5, kind: 'dir' },\n      children: [\n        { data: { name: 'project-1.doc', kind: 'doc', size: '240 KB' } },\n        { data: { name: 'project-2.doc', kind: 'doc', size: '290 KB' } },\n        {\n          data: { name: 'project-3', kind: 'dir', size: '466 KB', items: 3 },\n          children: [\n            { data: { name: 'project-3A.doc', kind: 'doc', size: '200 KB' } },\n            { data: { name: 'project-3B.doc', kind: 'doc', size: '266 KB' } },\n            { data: { name: 'project-3C.doc', kind: 'doc', size: '0' } },\n          ],\n        },\n        { data: { name: 'project-4.docx', kind: 'docx', size: '900 KB' } },\n      ],\n    },\n    {\n      data: { name: 'Reports', kind: 'dir', size: '400 KB', items: 2 },\n      children: [\n        {\n          data: { name: 'Report 1', kind: 'dir', size: '100 KB', items: 1 },\n          children: [\n            { data: { name: 'report-1.doc', kind: 'doc', size: '100 KB' } },\n          ],\n        },\n        {\n          data: { name: 'Report 2', kind: 'dir', size: '300 KB', items: 2 },\n          children: [\n            { data: { name: 'report-2.doc', kind: 'doc', size: '290 KB' } },\n            { data: { name: 'report-2-note.txt', kind: 'txt', size: '10 KB' } },\n          ],\n        },\n      ],\n    },\n    {\n      data: { name: 'Other', kind: 'dir', size: '109 MB', items: 2 },\n      children: [\n        { data: { name: 'backup.bkp', kind: 'bkp', size: '107 MB' } },\n        { data: { name: 'secret-note.txt', kind: 'txt', size: '2 MB' } },\n      ],\n    },\n  ];\n}\n","/*\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NbCardModule, NbIconModule, NbInputModule, NbTreeGridModule } from '@nebular/theme';\n\nimport { FsIconComponent, TreeGridShowcaseComponent } from './tree-grid-showcase.component';\nimport { TreeGridRoutingModule } from './tree-grid-routing.module';\nimport { TreeGridSortableComponent } from './tree-grid-sortable.component';\nimport { TreeGridFilterableComponent } from './tree-grid-filterable.component';\nimport { TreeGridBasicComponent } from './tree-grid-basic.component';\nimport { TreeGridResponsiveComponent } from './tree-grid-responsive.component';\nimport { TreeGridCustomIconsComponent } from './tree-grid-custom-icons.component';\nimport { TreeGridDisableClickToggleComponent } from './tree-grid-disable-click-toggle.component';\nimport { TreeGridCustomNodeStructureComponent } from './tree-grid-custom-node-structure.component';\n\n@NgModule({\n  imports: [ CommonModule, NbTreeGridModule, TreeGridRoutingModule, NbCardModule, NbInputModule, NbIconModule ],\n  declarations: [\n    FsIconComponent,\n    TreeGridShowcaseComponent,\n    TreeGridSortableComponent,\n    TreeGridFilterableComponent,\n    TreeGridBasicComponent,\n    TreeGridResponsiveComponent,\n    TreeGridCustomIconsComponent,\n    TreeGridDisableClickToggleComponent,\n    TreeGridCustomNodeStructureComponent,\n  ],\n})\nexport class TreeGridModule {}\n","import { Component } from '@angular/core';\nimport { NbGetters, NbTreeGridDataSource, NbTreeGridDataSourceBuilder } from '@nebular/theme';\n\ninterface FSEntry {\n  name: string;\n  size: string;\n  kind: string;\n  items?: number;\n  childEntries?: FSEntry[];\n  expanded?: boolean;\n}\n\n@Component({\n  template: `\n    <nb-card>\n      <nb-card-body>\n\n        <table [nbTreeGrid]=\"source\">\n          <tr nbTreeGridHeaderRow *nbTreeGridHeaderRowDef=\"allColumns\"></tr>\n          <tr nbTreeGridRow *nbTreeGridRowDef=\"let row; columns: allColumns\"></tr>\n\n          <ng-container [nbTreeGridColumnDef]=\"customColumn\">\n            <th nbTreeGridHeaderCell *nbTreeGridHeaderCellDef>{{customColumn}}</th>\n            <td nbTreeGridCell *nbTreeGridCellDef=\"let row\">\n\n              <nb-tree-grid-row-toggle\n                [expanded]=\"row.expanded\"\n                *ngIf=\"row.data.kind === 'dir'\">\n              </nb-tree-grid-row-toggle>\n\n              {{row.data[customColumn]}}\n\n            </td>\n          </ng-container>\n\n          <ng-container *ngFor=\"let column of defaultColumns\" [nbTreeGridColumnDef]=\"column\">\n            <th nbTreeGridHeaderCell *nbTreeGridHeaderCellDef>{{column}}</th>\n            <td nbTreeGridCell *nbTreeGridCellDef=\"let row\">{{row.data[column] || '-'}}</td>\n          </ng-container>\n        </table>\n\n      </nb-card-body>\n    </nb-card>\n  `,\n  styleUrls: ['./tree-grid-shared.scss'],\n})\nexport class TreeGridCustomNodeStructureComponent {\n  customColumn = 'name';\n  defaultColumns = [ 'size', 'kind', 'items' ];\n  allColumns = [ this.customColumn, ...this.defaultColumns ];\n  source: NbTreeGridDataSource<FSEntry>;\n\n  constructor(dataSourceBuilder: NbTreeGridDataSourceBuilder<FSEntry>) {\n    const getters: NbGetters<FSEntry, FSEntry> = {\n      dataGetter: (node: FSEntry) => node,\n      childrenGetter: (node: FSEntry) => node.childEntries || undefined,\n      expandedGetter: (node: FSEntry) => !!node.expanded,\n    };\n    this.source = dataSourceBuilder.create(this.data, getters);\n  }\n\n  private data: FSEntry[] = [\n    {\n      name: 'Projects', size: '1.8 MB', items: 5, kind: 'dir', expanded: true,\n      childEntries: [\n        { name: 'project-1.doc', kind: 'doc', size: '240 KB' },\n        { name: 'project-2.doc', kind: 'doc', size: '290 KB' },\n        {\n          name: 'project-3', kind: 'dir', size: '466 KB', items: 3,\n          childEntries: [\n            { name: 'project-3A.doc', kind: 'doc', size: '200 KB' },\n            { name: 'project-3B.doc', kind: 'doc', size: '266 KB' },\n            { name: 'project-3C.doc', kind: 'doc', size: '0' },\n          ],\n        },\n        { name: 'project-4.docx', kind: 'docx', size: '900 KB' },\n      ],\n    },\n    {\n      name: 'Reports', kind: 'dir', size: '400 KB', items: 2,\n      childEntries: [\n        {\n          name: 'Report 1', kind: 'dir', size: '100 KB', items: 1,\n          childEntries: [\n            { name: 'report-1.doc', kind: 'doc', size: '100 KB' },\n          ],\n        },\n        {\n          name: 'Report 2', kind: 'dir', size: '300 KB', items: 2,\n          childEntries: [\n            { name: 'report-2.doc', kind: 'doc', size: '290 KB' },\n            { name: 'report-2-note.txt', kind: 'txt', size: '10 KB' },\n          ],\n        },\n      ],\n    },\n    {\n      name: 'Other', kind: 'dir', size: '109 MB', items: 2,\n      childEntries: [\n        { name: 'backup.bkp', kind: 'bkp', size: '107 MB' },\n        { name: 'secret-note.txt', kind: 'txt', size: '2 MB' },\n      ],\n    },\n  ];\n}\n","import { Component } from '@angular/core';\n\ninterface TreeNode<T> {\n  data: T;\n  children?: TreeNode<T>[];\n  expanded?: boolean;\n}\n\ninterface FSEntry {\n  name: string;\n  size: string;\n  kind: string;\n  items?: number;\n}\n\n@Component({\n  template: `\n    <nb-card>\n      <nb-card-body>\n\n        <table [nbTreeGrid]=\"data\" equalColumnsWidth>\n\n          <tr nbTreeGridRow [clickToToggle]=\"false\" *nbTreeGridRowDef=\"let row; columns: allColumns\"></tr>\n\n          <ng-container [nbTreeGridColumnDef]=\"customColumn\">\n            <td nbTreeGridCell *nbTreeGridCellDef=\"let row\">\n\n              <nb-tree-grid-row-toggle\n                [expanded]=\"row.expanded\"\n                *ngIf=\"row.data.kind === 'dir'\">\n              </nb-tree-grid-row-toggle>\n\n              {{row.data.name}}\n\n            </td>\n          </ng-container>\n\n          <ng-container *ngFor=\"let column of defaultColumns\" [nbTreeGridColumnDef]=\"column\">\n            <td nbTreeGridCell *nbTreeGridCellDef=\"let row\">{{row.data[column]}}</td>\n          </ng-container>\n\n        </table>\n\n      </nb-card-body>\n    </nb-card>\n  `,\n  styleUrls: ['./tree-grid-shared.scss'],\n})\nexport class TreeGridDisableClickToggleComponent {\n  customColumn = 'name';\n  defaultColumns = [ 'size', 'kind', 'items' ];\n  allColumns = [ this.customColumn, ...this.defaultColumns ];\n\n  data: TreeNode<FSEntry>[] = [\n    {\n      data: { name: 'Projects', size: '1.8 MB', items: 5, kind: 'dir' },\n      children: [\n        { data: { name: 'project-1.doc', kind: 'doc', size: '240 KB' } },\n        { data: { name: 'project-2.doc', kind: 'doc', size: '290 KB' } },\n        {\n          data: { name: 'project-3', kind: 'dir', size: '466 KB', items: 3 },\n          children: [\n            { data: { name: 'project-3A.doc', kind: 'doc', size: '200 KB' } },\n            { data: { name: 'project-3B.doc', kind: 'doc', size: '266 KB' } },\n            { data: { name: 'project-3C.doc', kind: 'doc', size: '0' } },\n          ],\n        },\n        { data: { name: 'project-4.docx', kind: 'docx', size: '900 KB' } },\n      ],\n    },\n    {\n      data: { name: 'Reports', kind: 'dir', size: '400 KB', items: 2 },\n      children: [\n        {\n          data: { name: 'Report 1', kind: 'dir', size: '100 KB', items: 1 },\n          children: [\n            { data: { name: 'report-1.doc', kind: 'doc', size: '100 KB' } },\n          ],\n        },\n        {\n          data: { name: 'Report 2', kind: 'dir', size: '300 KB', items: 2 },\n          children: [\n            { data: { name: 'report-2.doc', kind: 'doc', size: '290 KB' } },\n            { data: { name: 'report-2-note.txt', kind: 'txt', size: '10 KB' } },\n          ],\n        },\n      ],\n    },\n    {\n      data: { name: 'Other', kind: 'dir', size: '109 MB', items: 2 },\n      children: [\n        { data: { name: 'backup.bkp', kind: 'bkp', size: '107 MB' } },\n        { data: { name: 'secret-note.txt', kind: 'txt', size: '2 MB' } },\n      ],\n    },\n  ];\n}\n","import { Component } from '@angular/core';\nimport { NbTreeGridDataSource, NbTreeGridDataSourceBuilder } from '@nebular/theme';\n\ninterface TreeNode<T> {\n  data: T;\n  children?: TreeNode<T>[];\n  expanded?: boolean;\n}\n\ninterface FSEntry {\n  name: string;\n  size: string;\n  kind: string;\n  items?: number;\n}\n\n@Component({\n  template: `\n    <nb-card>\n      <nb-card-body>\n\n        <table [nbTreeGrid]=\"dataSource\" [nbSort]=\"dataSource\" equalColumnsWidth>\n\n          <tr nbTreeGridHeaderRow *nbTreeGridHeaderRowDef=\"allColumns\"></tr>\n          <tr nbTreeGridRow *nbTreeGridRowDef=\"let row; columns: allColumns\"></tr>\n\n          <ng-container [nbTreeGridColumnDef]=\"customColumn\">\n\n            <th nbTreeGridHeaderCell *nbTreeGridHeaderCellDef nbSortHeader>\n              {{customColumn}}\n              <span *nbSortHeaderIcon=\"let asc = isAscending; let desc = isDescending\">\n                <nb-icon *ngIf=\"asc\" icon=\"chevron-down-outline\" aria-label=\"sorted ascending\"></nb-icon>\n                <nb-icon *ngIf=\"desc\" icon=\"chevron-up-outline\" aria-label=\"sorted descending\"></nb-icon>\n              </span>\n            </th>\n\n            <td nbTreeGridCell *nbTreeGridCellDef=\"let row\">\n              <button nbTreeGridRowToggle\n                      *ngIf=\"row.hasChildren()\"\n                      [attr.aria-label]=\"row.expanded ? 'collapse' : 'expand'\">\n                <nb-icon [icon]=\"row.expanded ? 'chevron-down-outline' : 'chevron-right-outline'\"\n                         aria-hidden=\"true\">\n                </nb-icon>\n              </button>\n              {{row.data.name}}\n            </td>\n\n          </ng-container>\n\n          <ng-container *ngFor=\"let column of defaultColumns\" [nbTreeGridColumnDef]=\"column\">\n            <th nbTreeGridHeaderCell *nbTreeGridHeaderCellDef>{{column}}</th>\n            <td nbTreeGridCell *nbTreeGridCellDef=\"let row\">{{row.data[column]}}</td>\n          </ng-container>\n\n        </table>\n\n      </nb-card-body>\n    </nb-card>\n  `,\n  styleUrls: ['./tree-grid-shared.scss', './tree-grid-custom-icons.component.scss'],\n})\nexport class TreeGridCustomIconsComponent {\n  customColumn = 'name';\n  defaultColumns = [ 'size', 'kind', 'items' ];\n  allColumns = [ this.customColumn, ...this.defaultColumns ];\n\n  dataSource: NbTreeGridDataSource<FSEntry>;\n\n  constructor(dataSourceBuilder: NbTreeGridDataSourceBuilder<FSEntry>) {\n    this.dataSource = dataSourceBuilder.create(this.data);\n  }\n\n  private data: TreeNode<FSEntry>[] = [\n    {\n      data: { name: 'Projects', size: '1.8 MB', items: 5, kind: 'dir' },\n      children: [\n        { data: { name: 'project-1.doc', kind: 'doc', size: '240 KB' } },\n        { data: { name: 'project-2.doc', kind: 'doc', size: '290 KB' } },\n        {\n          data: { name: 'project-3', kind: 'dir', size: '466 KB', items: 3 },\n          children: [\n            { data: { name: 'project-3A.doc', kind: 'doc', size: '200 KB' } },\n            { data: { name: 'project-3B.doc', kind: 'doc', size: '266 KB' } },\n            { data: { name: 'project-3C.doc', kind: 'doc', size: '0' } },\n          ],\n        },\n        { data: { name: 'project-4.docx', kind: 'docx', size: '900 KB' } },\n      ],\n    },\n    {\n      data: { name: 'Reports', kind: 'dir', size: '400 KB', items: 2 },\n      children: [\n        {\n          data: { name: 'Report 1', kind: 'dir', size: '100 KB', items: 1 },\n          children: [\n            { data: { name: 'report-1.doc', kind: 'doc', size: '100 KB' } },\n          ],\n        },\n        {\n          data: { name: 'Report 2', kind: 'dir', size: '300 KB', items: 2 },\n          children: [\n            { data: { name: 'report-2.doc', kind: 'doc', size: '290 KB' } },\n            { data: { name: 'report-2-note.txt', kind: 'txt', size: '10 KB' } },\n          ],\n        },\n      ],\n    },\n    {\n      data: { name: 'Other', kind: 'dir', size: '109 MB', items: 2 },\n      children: [\n        { data: { name: 'backup.bkp', kind: 'bkp', size: '107 MB' } },\n        { data: { name: 'secret-note.txt', kind: 'txt', size: '2 MB' } },\n      ],\n    },\n  ];\n}\n","import { Component } from '@angular/core';\nimport { NbTreeGridDataSource, NbTreeGridDataSourceBuilder } from '@nebular/theme';\n\ninterface TreeNode<T> {\n  data: T;\n  children?: TreeNode<T>[];\n  expanded?: boolean;\n}\n\ninterface FSEntry {\n  name: string;\n  size: string;\n  kind: string;\n  items?: number;\n}\n\n@Component({\n  template: `\n    <nb-card>\n      <nb-card-body>\n\n        <label class=\"search-label\" for=\"search\">Type to filter:</label>\n        <input nbInput (input)=\"filter($event)\" id=\"search\" class=\"search-input\">\n\n        <table [nbTreeGrid]=\"dataSource\" equalColumnsWidth>\n\n          <tr nbTreeGridHeaderRow *nbTreeGridHeaderRowDef=\"allColumns\"></tr>\n          <tr nbTreeGridRow *nbTreeGridRowDef=\"let row; columns: allColumns\"></tr>\n\n          <ng-container [nbTreeGridColumnDef]=\"customColumn\">\n            <th nbTreeGridHeaderCell *nbTreeGridHeaderCellDef>\n              {{customColumn}}\n            </th>\n\n            <td nbTreeGridCell *nbTreeGridCellDef=\"let row\">\n\n              <nb-tree-grid-row-toggle\n                [expanded]=\"row.expanded\"\n                *ngIf=\"row.data.kind === 'dir'\">\n              </nb-tree-grid-row-toggle>\n\n              {{row.data.name}}\n\n            </td>\n          </ng-container>\n\n          <ng-container *ngFor=\"let column of defaultColumns\" [nbTreeGridColumnDef]=\"column\">\n            <th nbTreeGridHeaderCell *nbTreeGridHeaderCellDef>{{column}}</th>\n            <td nbTreeGridCell *nbTreeGridCellDef=\"let row\">{{row.data[column]}}</td>\n          </ng-container>\n\n        </table>\n\n      </nb-card-body>\n    </nb-card>\n  `,\n  styleUrls: ['./tree-grid-shared.scss', './tree-grid-showcase.component.scss'],\n})\nexport class TreeGridFilterableComponent {\n  customColumn = 'name';\n  defaultColumns = [ 'size', 'kind', 'items' ];\n  allColumns = [ this.customColumn, ...this.defaultColumns ];\n\n  dataSource: NbTreeGridDataSource<any>;\n\n  constructor(private dataSourceBuilder: NbTreeGridDataSourceBuilder<any>) {\n    this.dataSource = this.dataSourceBuilder.create(this.data);\n  }\n\n  filter(event) {\n    this.dataSource.filter(event.target.value);\n  }\n\n  private data: TreeNode<FSEntry>[] = [\n    {\n      data: { name: 'Projects', size: '1.8 MB', items: 5, kind: 'dir' },\n      children: [\n        { data: { name: 'project-1.doc', kind: 'doc', size: '240 KB' } },\n        { data: { name: 'project-2.doc', kind: 'doc', size: '290 KB' } },\n        {\n          data: { name: 'project-3', kind: 'dir', size: '466 KB', items: 3 },\n          children: [\n            { data: { name: 'project-3A.doc', kind: 'doc', size: '200 KB' } },\n            { data: { name: 'project-3B.doc', kind: 'doc', size: '266 KB' } },\n            { data: { name: 'project-3C.doc', kind: 'doc', size: '0' } },\n          ],\n        },\n        { data: { name: 'project-4.docx', kind: 'docx', size: '900 KB' } },\n      ],\n    },\n    {\n      data: { name: 'Reports', kind: 'dir', size: '400 KB', items: 2 },\n      children: [\n        {\n          data: { name: 'Report 1', kind: 'dir', size: '100 KB', items: 1 },\n          children: [\n            { data: { name: 'report-1.doc', kind: 'doc', size: '100 KB' } },\n          ],\n        },\n        {\n          data: { name: 'Report 2', kind: 'dir', size: '300 KB', items: 2 },\n          children: [\n            { data: { name: 'report-2.doc', kind: 'doc', size: '290 KB' } },\n            { data: { name: 'report-2-note.txt', kind: 'txt', size: '10 KB' } },\n          ],\n        },\n      ],\n    },\n    {\n      data: { name: 'Other', kind: 'dir', size: '109 MB', items: 2 },\n      children: [\n        { data: { name: 'backup.bkp', kind: 'bkp', size: '107 MB' } },\n        { data: { name: 'secret-note.txt', kind: 'txt', size: '2 MB' } },\n      ],\n    },\n  ];\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Route} from '@angular/router';\nimport { TreeGridShowcaseComponent } from './tree-grid-showcase.component';\nimport { TreeGridSortableComponent } from './tree-grid-sortable.component';\nimport { TreeGridFilterableComponent } from './tree-grid-filterable.component';\nimport { TreeGridBasicComponent } from './tree-grid-basic.component';\nimport { TreeGridResponsiveComponent } from './tree-grid-responsive.component';\nimport { TreeGridCustomIconsComponent } from './tree-grid-custom-icons.component';\nimport { TreeGridDisableClickToggleComponent } from './tree-grid-disable-click-toggle.component';\nimport { TreeGridCustomNodeStructureComponent } from './tree-grid-custom-node-structure.component';\n\nconst routes: Route[] = [\n  {\n    path: 'tree-grid-showcase.component',\n    component: TreeGridShowcaseComponent,\n  },\n  {\n    path: 'tree-grid-sortable.component',\n    component: TreeGridSortableComponent,\n  },\n  {\n    path: 'tree-grid-filterable.component',\n    component: TreeGridFilterableComponent,\n  },\n  {\n    path: 'tree-grid-basic.component',\n    component: TreeGridBasicComponent,\n  },\n  {\n    path: 'tree-grid-responsive.component',\n    component: TreeGridResponsiveComponent,\n  },\n  {\n    path: 'tree-grid-custom-icons.component',\n    component: TreeGridCustomIconsComponent,\n  },\n  {\n    path: 'tree-grid-disable-click-toggle.component',\n    component: TreeGridDisableClickToggleComponent,\n  },\n  {\n    path: 'tree-grid-custom-node-structure.component',\n    component: TreeGridCustomNodeStructureComponent,\n  },\n];\n\n@NgModule({\n  imports: [ RouterModule.forChild(routes) ],\n  exports: [ RouterModule ],\n})\nexport class TreeGridRoutingModule {}\n","import { Component } from '@angular/core';\nimport { NbSortDirection, NbSortRequest, NbTreeGridDataSource, NbTreeGridDataSourceBuilder } from '@nebular/theme';\n\ninterface TreeNode<T> {\n  data: T;\n  children?: TreeNode<T>[];\n  expanded?: boolean;\n}\n\ninterface FSEntry {\n  name: string;\n  size: string;\n  kind: string;\n  items?: number;\n}\n\n@Component({\n  template: `\n    <nb-card>\n      <nb-card-body>\n\n        <table [nbTreeGrid]=\"dataSource\" nbSort (sort)=\"changeSort($event)\" equalColumnsWidth>\n\n          <tr nbTreeGridHeaderRow *nbTreeGridHeaderRowDef=\"allColumns\"></tr>\n          <tr nbTreeGridRow *nbTreeGridRowDef=\"let row; columns: allColumns\"></tr>\n\n          <ng-container [nbTreeGridColumnDef]=\"customColumn\">\n            <th nbTreeGridHeaderCell [nbSortHeader]=\"getDirection(customColumn)\" *nbTreeGridHeaderCellDef>\n              {{customColumn}}\n            </th>\n\n            <td nbTreeGridCell *nbTreeGridCellDef=\"let row\">\n\n              <nb-tree-grid-row-toggle\n                [expanded]=\"row.expanded\"\n                *ngIf=\"row.data.kind === 'dir'\">\n              </nb-tree-grid-row-toggle>\n\n              {{row.data.name}}\n\n            </td>\n          </ng-container>\n\n          <ng-container *ngFor=\"let column of defaultColumns\" [nbTreeGridColumnDef]=\"column\">\n            <th nbTreeGridHeaderCell [nbSortHeader]=\"getDirection(column)\" *nbTreeGridHeaderCellDef>\n              {{column}}\n            </th>\n\n            <td nbTreeGridCell *nbTreeGridCellDef=\"let row\">{{row.data[column]}}</td>\n          </ng-container>\n\n        </table>\n\n      </nb-card-body>\n    </nb-card>\n  `,\n  styleUrls: ['./tree-grid-shared.scss'],\n})\nexport class TreeGridSortableComponent {\n  customColumn = 'name';\n  defaultColumns = [ 'size', 'kind', 'items' ];\n  allColumns = [ this.customColumn, ...this.defaultColumns ];\n\n  dataSource: NbTreeGridDataSource<any>;\n\n  sortColumn: string = '';\n  sortDirection: NbSortDirection = NbSortDirection.NONE;\n\n  constructor(private dataSourceBuilder: NbTreeGridDataSourceBuilder<any>) {\n    this.dataSource = this.dataSourceBuilder.create(this.data);\n  }\n\n  changeSort(sortRequest: NbSortRequest): void {\n    this.dataSource.sort(sortRequest);\n    this.sortColumn = sortRequest.column;\n    this.sortDirection = sortRequest.direction;\n  }\n\n  getDirection(column: string): NbSortDirection {\n    if (column === this.sortColumn) {\n      return this.sortDirection;\n    }\n    return NbSortDirection.NONE;\n  }\n\n  private data: TreeNode<FSEntry>[] = [\n    {\n      data: { name: 'Projects', size: '1.8 MB', items: 5, kind: 'dir' },\n      children: [\n        { data: { name: 'project-1.doc', kind: 'doc', size: '240 KB' } },\n        { data: { name: 'project-2.doc', kind: 'doc', size: '290 KB' } },\n        {\n          data: { name: 'project-3', kind: 'dir', size: '466 KB', items: 3 },\n          children: [\n            { data: { name: 'project-3A.doc', kind: 'doc', size: '200 KB' } },\n            { data: { name: 'project-3B.doc', kind: 'doc', size: '266 KB' } },\n            { data: { name: 'project-3C.doc', kind: 'doc', size: '0' } },\n          ],\n        },\n        { data: { name: 'project-4.docx', kind: 'docx', size: '900 KB' } },\n      ],\n    },\n    {\n      data: { name: 'Reports', kind: 'dir', size: '400 KB', items: 2 },\n      children: [\n        {\n          data: { name: 'Report 1', kind: 'dir', size: '100 KB', items: 1 },\n          children: [\n            { data: { name: 'report-1.doc', kind: 'doc', size: '100 KB' } },\n          ],\n        },\n        {\n          data: { name: 'Report 2', kind: 'dir', size: '300 KB', items: 2 },\n          children: [\n            { data: { name: 'report-2.doc', kind: 'doc', size: '290 KB' } },\n            { data: { name: 'report-2-note.txt', kind: 'txt', size: '10 KB' } },\n          ],\n        },\n      ],\n    },\n    {\n      data: { name: 'Other', kind: 'dir', size: '109 MB', items: 2 },\n      children: [\n        { data: { name: 'backup.bkp', kind: 'bkp', size: '107 MB' } },\n        { data: { name: 'secret-note.txt', kind: 'txt', size: '2 MB' } },\n      ],\n    },\n  ];\n}\n","import { Component } from '@angular/core';\n\ninterface TreeNode<T> {\n  data: T;\n  children?: TreeNode<T>[];\n  expanded?: boolean;\n}\n\ninterface FSEntry {\n  name: string;\n  size: string;\n  kind: string;\n  items?: number;\n}\n\n@Component({\n  template: `\n    <nb-card>\n      <nb-card-body>\n\n        <table [nbTreeGrid]=\"data\" equalColumnsWidth>\n\n          <tr nbTreeGridHeaderRow *nbTreeGridHeaderRowDef=\"allColumns\"></tr>\n          <tr nbTreeGridRow *nbTreeGridRowDef=\"let row; columns: allColumns\"></tr>\n\n          <ng-container nbTreeGridColumnDef=\"name\">\n            <th nbTreeGridHeaderCell *nbTreeGridHeaderCellDef>name</th>\n            <td nbTreeGridCell *nbTreeGridCellDef=\"let row\">\n\n              <nb-tree-grid-row-toggle\n                [expanded]=\"row.expanded\"\n                *ngIf=\"row.data.kind === 'dir'\">\n              </nb-tree-grid-row-toggle>\n\n              {{row.data.name}}\n\n            </td>\n          </ng-container>\n\n          <ng-container nbTreeGridColumnDef=\"size\" [hideOn]=\"600\">\n            <th nbTreeGridHeaderCell *nbTreeGridHeaderCellDef>size</th>\n            <td nbTreeGridCell *nbTreeGridCellDef=\"let row\">{{row.data.size}}</td>\n          </ng-container>\n\n          <ng-container nbTreeGridColumnDef=\"kind\" [hideOn]=\"1000\">\n            <th nbTreeGridHeaderCell *nbTreeGridHeaderCellDef>kind</th>\n            <td nbTreeGridCell *nbTreeGridCellDef=\"let row\">{{row.data.kind}}</td>\n          </ng-container>\n\n          <ng-container nbTreeGridColumnDef=\"items\" [showOn]=\"1200\">\n            <th nbTreeGridHeaderCell *nbTreeGridHeaderCellDef>items</th>\n            <td nbTreeGridCell *nbTreeGridCellDef=\"let row\">{{row.data.items || '-'}}</td>\n          </ng-container>\n        </table>\n\n      </nb-card-body>\n    </nb-card>\n  `,\n  styleUrls: ['./tree-grid-shared.scss'],\n})\nexport class TreeGridResponsiveComponent {\n  allColumns = [ 'name', 'size', 'kind', 'items' ];\n\n  data: TreeNode<FSEntry>[] = [\n    {\n      data: { name: 'Projects', size: '1.8 MB', items: 5, kind: 'dir' },\n      children: [\n        { data: { name: 'project-1.doc', kind: 'doc', size: '240 KB' } },\n        { data: { name: 'project-2.doc', kind: 'doc', size: '290 KB' } },\n        {\n          data: { name: 'project-3', kind: 'dir', size: '466 KB', items: 3 },\n          children: [\n            { data: { name: 'project-3A.doc', kind: 'doc', size: '200 KB' } },\n            { data: { name: 'project-3B.doc', kind: 'doc', size: '266 KB' } },\n            { data: { name: 'project-3C.doc', kind: 'doc', size: '0' } },\n          ],\n        },\n        { data: { name: 'project-4.docx', kind: 'docx', size: '900 KB' } },\n      ],\n    },\n    {\n      data: { name: 'Reports', kind: 'dir', size: '400 KB', items: 2 },\n      children: [\n        {\n          data: { name: 'Report 1', kind: 'dir', size: '100 KB', items: 1 },\n          children: [\n            { data: { name: 'report-1.doc', kind: 'doc', size: '100 KB' } },\n          ],\n        },\n        {\n          data: { name: 'Report 2', kind: 'dir', size: '300 KB', items: 2 },\n          children: [\n            { data: { name: 'report-2.doc', kind: 'doc', size: '290 KB' } },\n            { data: { name: 'report-2-note.txt', kind: 'txt', size: '10 KB' } },\n          ],\n        },\n      ],\n    },\n    {\n      data: { name: 'Other', kind: 'dir', size: '109 MB', items: 2 },\n      children: [\n        { data: { name: 'backup.bkp', kind: 'bkp', size: '107 MB' } },\n        { data: { name: 'secret-note.txt', kind: 'txt', size: '2 MB' } },\n      ],\n    },\n  ];\n}\n"],"sourceRoot":"webpack:///"}