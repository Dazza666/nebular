{"version":3,"sources":["./src/framework/security/public_api.ts","./src/playground/without-layout/auth/auth.component.ts","./src/playground/without-layout/auth/role.provider.ts","./src/playground/without-layout/auth/auth-guard.service.ts","./src/framework/security/services/access-checker.service.ts","./src/playground/without-layout/auth/acl/acl-test.component.ts","./src/playground/without-layout/auth/auth.module.ts","./src/framework/security/services/acl.service.ts","./src/playground/without-layout/auth/api-calls/api-calls.component.ts","./src/framework/security/security.options.ts","./src/framework/security/security.module.ts","./src/playground/without-layout/auth/auth-routing.module.ts","./src/framework/security/services/role.provider.ts","./src/framework/security/directives/is-granted.directive.ts"],"names":[],"mappings":"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","file":"auth-auth-module.js","sourcesContent":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\nexport * from './security.options';\nexport * from './security.module';\nexport * from './services/acl.service';\nexport * from './services/access-checker.service';\nexport * from './services/role.provider';\nexport * from './directives/is-granted.directive';\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'nb-playground-auth',\n  template: `\n    <router-outlet></router-outlet>\n  `,\n})\nexport class AuthPlaygroundComponent {\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { NbAuthService, NbAuthJWTToken } from '@nebular/auth';\nimport { NbRoleProvider } from '@nebular/security';\n\n@Injectable()\nexport class CustomRoleProvider implements NbRoleProvider {\n\n  constructor(private authService: NbAuthService) {\n  }\n\n  getRole(): Observable<string> {\n    return this.authService.onTokenChange()\n      .pipe(\n        map((token: NbAuthJWTToken) => {\n          if (token instanceof NbAuthJWTToken && token.isValid()) {\n            return token.getPayload()['role'];\n          }\n          return 'guest';\n        }),\n      );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { tap } from 'rxjs/operators';\nimport { CanActivate, Router } from '@angular/router';\nimport { NbAuthService } from '@nebular/auth';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n  constructor(private authService: NbAuthService, private router: Router) {\n  }\n\n  canActivate() {\n    return this.authService.isAuthenticated()\n      .pipe(\n        tap(authenticated => {\n          if (!authenticated) {\n            this.router.navigate(['auth/login']);\n          }\n        }),\n      );\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\nimport { Injectable } from '@angular/core';\nimport { NbRoleProvider } from './role.provider';\nimport { NbAclService } from './acl.service';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n/**\n * Access checker service.\n *\n * Injects `NbRoleProvider` to determine current user role, and checks access permissions using `NbAclService`\n */\n@Injectable()\nexport class NbAccessChecker {\n\n  constructor(protected roleProvider: NbRoleProvider, protected acl: NbAclService) {\n  }\n\n  /**\n   * Checks whether access is granted or not\n   *\n   * @param {string} permission\n   * @param {string} resource\n   * @returns {Observable<boolean>}\n   */\n  isGranted(permission: string, resource: string): Observable<boolean> {\n    return this.roleProvider.getRole()\n      .pipe(\n        map((role: string|string[]) => Array.isArray(role) ? role : [role]),\n        map((roles: string[]) => {\n          return roles.some(role => this.acl.can(role, permission, resource));\n        }),\n      );\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport { Component } from '@angular/core';\nimport { NbAccessChecker } from '@nebular/security';\n\n@Component({\n  selector: 'nb-actions-test',\n  template: `\n    <nb-layout>\n      <nb-layout-column>\n        <nb-card>\n          <nb-card-header>Service usage</nb-card-header>\n          <nb-card-body>\n            <button *ngIf=\"accessChecker.isGranted('create', 'comments') | async\" >Post Comment</button>\n          </nb-card-body>\n        </nb-card>\n        <nb-card>\n          <nb-card-header>Directive usage</nb-card-header>\n          <nb-card-body>\n            <button *nbIsGranted=\"['create', 'comments']\" >Post Comment</button>\n          </nb-card-body>\n        </nb-card>\n      </nb-layout-column>\n    </nb-layout>\n  `,\n})\nexport class AclTestComponent {\n\n  constructor(public accessChecker: NbAccessChecker) {\n  }\n\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HTTP_INTERCEPTORS, HttpClientModule, HttpRequest } from '@angular/common/http';\n\nimport {\n  NbCardModule,\n  NbLayoutModule,\n  NbListModule,\n} from '@nebular/theme';\nimport {\n  NbAuthJWTToken,\n  NbAuthModule,\n  NbPasswordAuthStrategy,\n  NbDummyAuthStrategy,\n  NbAuthJWTInterceptor,\n  NbOAuth2GrantType,\n  NbOAuth2AuthStrategy,\n  NbAuthOAuth2Token,\n  NB_AUTH_TOKEN_INTERCEPTOR_FILTER,\n} from '@nebular/auth';\nimport { NbSecurityModule, NbRoleProvider } from '@nebular/security';\n\nimport { AuthPlaygroundComponent } from './auth.component';\nimport { AuthPlaygroundRoutingModule } from './auth-routing.module';\nimport { CustomRoleProvider } from './role.provider';\nimport { AclTestComponent } from './acl/acl-test.component';\nimport { AuthGuard } from './auth-guard.service';\nimport { PlaygroundApiCallsComponent } from './api-calls/api-calls.component';\n\nexport function filterInterceptorRequest(req: HttpRequest<any>) {\n  return ['http://localhost:4400/api/auth/',\n          'http://other.url/with/no/token/injected/',\n         ]\n    .some(url => req.url.includes(url));\n}\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    HttpClientModule,\n    AuthPlaygroundRoutingModule,\n\n    NbCardModule,\n    NbLayoutModule,\n    NbListModule,\n\n    NbAuthModule.forRoot({\n      forms: {\n        login: {\n          strategy: 'password',\n          redirectDelay: 1000,\n          socialLinks: [\n            {\n              url: 'https://github.com/akveo',\n              target: '_blank',\n              title: 'GitHub',\n            },\n            {\n              url: 'https://www.facebook.com/akveo',\n              target: '_blank',\n              icon: 'home-outline',\n            },\n            {\n              url: 'https://www.facebook.com/akveo',\n              target: '_blank',\n              title: 'Twitter',\n            },\n          ],\n        },\n      },\n      strategies: [\n        NbDummyAuthStrategy.setup({\n          name: 'dummy',\n\n          alwaysFail: true,\n          delay: 1000,\n        }),\n\n        NbPasswordAuthStrategy.setup({\n          name: 'email',\n          token: {\n            class: NbAuthJWTToken,\n          },\n          baseEndpoint: 'http://localhost:4400/api/auth/',\n          logout: {\n            redirect: {\n              success: '/auth/login',\n              failure: '/auth/login',\n            },\n          },\n          requestPass: {\n            redirect: {\n              success: '/auth/reset-password',\n            },\n          },\n          resetPass: {\n            redirect: {\n              success: '/auth/login',\n            },\n          },\n          errors: {\n            key: 'data.errors',\n          },\n        }),\n        NbOAuth2AuthStrategy.setup({\n          name: 'password',\n          clientId: 'test',\n          clientSecret: 'secret',\n          baseEndpoint: 'http://localhost:4400/api/auth/',\n          token: {\n            endpoint: 'token',\n            grantType: NbOAuth2GrantType.PASSWORD,\n            class: NbAuthOAuth2Token,\n          },\n          refresh: {\n            endpoint: 'refresh-token',\n            grantType: NbOAuth2GrantType.REFRESH_TOKEN,\n          },\n        }),\n      ],\n    }),\n    NbSecurityModule.forRoot({\n      accessControl: {\n        guest: {\n          view: ['news', 'comments'],\n        },\n        user: {\n          parent: 'guest',\n          create: 'comments',\n        },\n        moderator: {\n          parent: 'user',\n          create: 'news',\n          remove: '*',\n        },\n      },\n    }),\n  ],\n  declarations: [\n    AuthPlaygroundComponent,\n    AclTestComponent,\n    PlaygroundApiCallsComponent,\n  ],\n  providers: [\n    AuthGuard,\n    { provide: HTTP_INTERCEPTORS, useClass: NbAuthJWTInterceptor, multi: true },\n    { provide: NB_AUTH_TOKEN_INTERCEPTOR_FILTER, useValue: filterInterceptorRequest },\n    { provide: NbRoleProvider, useClass: CustomRoleProvider },\n  ],\n})\nexport class AuthPlaygroundModule {\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\nimport { Inject, Injectable, Optional } from '@angular/core';\nimport { NB_SECURITY_OPTIONS_TOKEN, NbAclOptions, NbAclRole, NbAccessControl } from '../security.options';\n\nconst shallowObjectClone = (o) => Object.assign({}, o);\nconst shallowArrayClone = (a) => Object.assign([], a);\nconst popParent = (abilities) => {\n  const parent = abilities['parent'];\n  delete abilities['parent'];\n  return parent;\n};\n\n/**\n * Common acl service.\n */\n@Injectable()\nexport class NbAclService {\n\n  private static readonly ANY_RESOURCE = '*';\n\n  private state: NbAccessControl = {};\n\n  constructor(@Optional() @Inject(NB_SECURITY_OPTIONS_TOKEN) protected settings: NbAclOptions = {}) {\n\n    if (settings.accessControl) {\n      this.setAccessControl(settings.accessControl);\n    }\n  }\n\n  /**\n   * Set/Reset ACL list\n   * @param {NbAccessControl} list\n   */\n  setAccessControl(list: NbAccessControl) {\n    for (const [role, value] of Object.entries(list)) {\n      const abilities = shallowObjectClone(value);\n      const parent = popParent(abilities);\n      this.register(role, parent, abilities);\n    }\n  }\n\n  /**\n   * Register a new role with a list of abilities (permission/resources combinations)\n   * @param {string} role\n   * @param {string} parent\n   * @param {[permission: string]: string|string[]} abilities\n   */\n  register(role: string, parent: string = null, abilities: {[permission: string]: string|string[]} = {}) {\n\n    this.validateRole(role);\n\n    this.state[role] = {\n      parent: parent,\n    };\n\n    for (const [permission, value] of Object.entries(abilities)) {\n      const resources = typeof value === 'string' ? [value] : value;\n      this.allow(role, permission, shallowArrayClone(resources));\n    }\n  }\n\n  /**\n   * Allow a permission for specific resources to a role\n   * @param {string} role\n   * @param {string} permission\n   * @param {string | string[]} resource\n   */\n  allow(role: string, permission: string, resource: string|string[]) {\n\n    this.validateRole(role);\n\n    if (!this.getRole(role)) {\n      this.register(role, null, {});\n    }\n\n    resource = typeof resource === 'string' ? [resource] : resource;\n\n    let resources = shallowArrayClone(this.getRoleResources(role, permission));\n    resources = resources.concat(resource);\n\n    this.state[role][permission] = resources\n      .filter((item, pos) => resources.indexOf(item) === pos);\n  }\n\n  /**\n   * Check whether the role has a permission to a resource\n   * @param {string} role\n   * @param {string} permission\n   * @param {string} resource\n   * @returns {boolean}\n   */\n  can(role: string, permission: string, resource: string) {\n    this.validateResource(resource);\n\n    const parentRole = this.getRoleParent(role);\n    const parentCan = parentRole && this.can(this.getRoleParent(role), permission, resource);\n    return parentCan || this.exactCan(role, permission, resource);\n  }\n\n  private getRole(role: string): NbAclRole {\n    return this.state[role];\n  }\n\n  private validateRole(role: string) {\n    if (!role) {\n      throw new Error('NbAclService: role name cannot be empty');\n    }\n  }\n\n  private validateResource(resource: string) {\n    if (!resource || [NbAclService.ANY_RESOURCE].includes(resource)) {\n      throw new Error(`NbAclService: cannot use empty or bulk '*' resource placeholder with 'can' method`);\n    }\n  }\n\n  private exactCan(role: string, permission: string, resource: string) {\n    const resources = this.getRoleResources(role, permission);\n    return resources.includes(resource) || resources.includes(NbAclService.ANY_RESOURCE);\n  }\n\n  private getRoleResources(role: string, permission: string): string[] {\n    return this.getRoleAbilities(role)[permission] || [];\n  }\n\n  private getRoleAbilities(role: string): {[permission: string]: string[]} {\n    const abilities = shallowObjectClone(this.state[role] || {});\n    popParent(shallowObjectClone(this.state[role] || {}));\n    return abilities;\n  }\n\n  private getRoleParent(role: string): string {\n    return this.state[role] ? this.state[role]['parent'] : null;\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport { Component, Inject } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { Observable, of as observableOf } from 'rxjs';\nimport { catchError, delay } from 'rxjs/operators';\nimport { NbAuthResult, NbAuthService, NbAuthToken, NB_AUTH_OPTIONS } from '@nebular/auth';\nimport { getDeepFromObject } from '../../../../framework/auth/helpers';\nimport { Wine } from './wine';\n\n@Component({\n  selector: 'nb-playground-api-calls',\n  template: `\n    <router-outlet></router-outlet>\n    <nb-layout>\n      <nb-layout-column>\n        <nb-card>\n          <nb-card-body>\n            <h2>You are authenticated</h2>\n            <p>You can call the secured API</p>\n            <button nbButton status=\"primary\" (click)=\"loadWines()\">Call API</button>\n            <button nbButton status=\"primary\" (click)=\"logout()\">Sign out</button>\n          </nb-card-body>\n        </nb-card>\n        <nb-card *ngIf=\"(wines$ | async)?.length\">\n          <nb-card-header>\n            Alain'wines\n          </nb-card-header>\n          <nb-list>\n            <nb-list-item *ngFor=\"let wine of wines$ | async\">\n              {{ wine.region }}, {{ wine.name }} ({{ wine.year }})\n            </nb-list-item>\n          </nb-list>\n        </nb-card>\n      </nb-layout-column>\n    </nb-layout>\n  `,\n})\n\nexport class PlaygroundApiCallsComponent {\n\n  token: NbAuthToken;\n  wines$: Observable<Wine[]>;\n  redirectDelay: number = 0;\n  strategy: string = '';\n\n  constructor(private authService: NbAuthService,\n              private http: HttpClient,\n              private router: Router,\n              @Inject(NB_AUTH_OPTIONS) protected options = {}) {\n\n    this.redirectDelay = this.getConfigValue('forms.logout.redirectDelay');\n    this.strategy = this.getConfigValue('forms.logout.strategy');\n\n    this.authService.onTokenChange()\n      .subscribe((token: NbAuthToken) => {\n        this.token = null;\n        if (token && token.isValid()) {\n          this.token = token;\n        }\n      });\n  }\n\n  logout() {\n    this.authService.logout(this.strategy)\n      .pipe(\n        delay(this.redirectDelay),\n      )\n      .subscribe((result: NbAuthResult) => this.router.navigate(['/auth/login']));\n  }\n\n  loadWines() {\n    this.wines$ = this.http.get<Wine[]>('http://localhost:4400/api/wines')\n      .pipe(\n        catchError(err => {\n          if (err instanceof HttpErrorResponse && err.status === 401) {\n            this.router.navigate(['/auth/login']);\n          }\n          return observableOf([]);\n        }),\n      );\n  }\n\n  getConfigValue(key: string): any {\n    return getDeepFromObject(this.options, key, null);\n  }\n}\n","import { InjectionToken } from '@angular/core';\n\nexport interface NbAclRole {\n  parent?: string,\n  [permission: string]: string|string[]|undefined,\n}\n\nexport interface NbAccessControl {\n  [role: string]: NbAclRole,\n}\n\nexport interface NbAclOptions {\n  accessControl?: NbAccessControl,\n}\n\nexport const NB_SECURITY_OPTIONS_TOKEN = new InjectionToken<NbAclOptions>('Nebular Security Options');\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { NB_SECURITY_OPTIONS_TOKEN, NbAclOptions } from './security.options';\nimport { NbAclService } from './services/acl.service';\nimport { NbAccessChecker } from './services/access-checker.service';\nimport { NbIsGrantedDirective } from './directives/is-granted.directive';\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  declarations: [\n    NbIsGrantedDirective,\n  ],\n  exports: [\n    NbIsGrantedDirective,\n  ],\n})\nexport class NbSecurityModule {\n  static forRoot(nbSecurityOptions?: NbAclOptions): ModuleWithProviders<NbSecurityModule> {\n    return {\n      ngModule: NbSecurityModule,\n      providers: [\n        { provide: NB_SECURITY_OPTIONS_TOKEN, useValue: nbSecurityOptions },\n        NbAclService,\n        NbAccessChecker,\n      ],\n    };\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AuthPlaygroundComponent } from './auth.component';\nimport {\n  NbAuthComponent,\n  NbLoginComponent,\n  NbLogoutComponent,\n  NbRegisterComponent,\n  NbRequestPasswordComponent,\n  NbResetPasswordComponent,\n} from '@nebular/auth';\nimport { AclTestComponent } from './acl/acl-test.component';\nimport { AuthGuard } from './auth-guard.service';\nimport { PlaygroundApiCallsComponent } from './api-calls/api-calls.component';\n\n\nexport const routes: Routes = [\n  {\n    path: '',\n    component: AuthPlaygroundComponent,\n    children: [\n      {\n        path: '',\n        component: NbAuthComponent,\n        children: [\n          {\n            path: '',\n            redirectTo: 'login',\n            pathMatch: 'full',\n          },\n          {\n            path: 'login',\n            component: NbLoginComponent,\n          },\n          {\n            path: 'register',\n            component: NbRegisterComponent,\n          },\n          {\n            path: 'logout',\n            component: NbLogoutComponent,\n          },\n          {\n            path: 'request-password',\n            component: NbRequestPasswordComponent,\n          },\n          {\n            path: 'reset-password',\n            component: NbResetPasswordComponent,\n          },\n        ],\n      },\n    ],\n  },\n  {\n    path: 'acl/acl-test.component',\n    component: AclTestComponent,\n  },\n  {\n    path: 'auth-guard.service',\n    canActivate: [AuthGuard],\n    component: AuthPlaygroundComponent,\n  },\n  {\n    path: 'api-calls.component',\n    canActivate: [AuthGuard],\n    component: PlaygroundApiCallsComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AuthPlaygroundRoutingModule {\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\nimport { Observable } from 'rxjs';\n\nexport abstract class NbRoleProvider {\n\n  /**\n   * Returns current user role\n   * @returns {Observable<string | string[]>}\n   */\n  abstract getRole(): Observable<string|string[]>;\n}\n","import { Directive, Input, OnDestroy, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\n\nimport { NbAccessChecker } from '../services/access-checker.service';\n\n@Directive({ selector: '[nbIsGranted]'})\nexport class NbIsGrantedDirective implements OnDestroy {\n\n  private destroy$ = new Subject<void>();\n\n  private hasView = false;\n\n  constructor(private templateRef: TemplateRef<any>,\n              private viewContainer: ViewContainerRef,\n              private accessChecker: NbAccessChecker) {\n  }\n\n  @Input() set nbIsGranted([permission, resource]: [string, string]) {\n\n    this.accessChecker.isGranted(permission, resource)\n      .pipe(\n        takeUntil(this.destroy$),\n      )\n      .subscribe((can: boolean) => {\n        if (can && !this.hasView) {\n          this.viewContainer.createEmbeddedView(this.templateRef);\n          this.hasView = true;\n        } else if (!can && this.hasView) {\n          this.viewContainer.clear();\n          this.hasView = false;\n        }\n      });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n"],"sourceRoot":"webpack:///"}